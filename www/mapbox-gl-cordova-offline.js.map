{"version":3,"file":"mapbox-gl-cordova-offline.js","sources":["../node_modules/pbf/index.js","../node_modules/mapbox-gl/src/style/parse_glyph_pbf.js","../node_modules/mapbox-gl/src/util/actor.js","../node_modules/@mapbox/whoots-js/index.mjs","../node_modules/mapbox-gl/src/geo/lng_lat_bounds.js","../node_modules/mapbox-gl/src/geo/lng_lat.js","../node_modules/mapbox-gl/src/geo/mercator_coordinate.js","../node_modules/mapbox-gl/src/source/tile_id.js","../node_modules/mapbox-gl/src/source/tile_bounds.js","../node_modules/mapbox-gl/src/source/raster_tile_source.js","../node_modules/mapbox-gl/src/data/dem_data.js","../node_modules/mapbox-gl/src/style-spec/group_by_layout.js","../node_modules/mapbox-gl/src/style/style_layer_index.js","../node_modules/mapbox-gl/src/symbol/check_max_angle.js","../node_modules/mapbox-gl/src/symbol/get_anchors.js","../node_modules/mapbox-gl/src/symbol/collision_feature.js","../node_modules/tinyqueue/index.js","../node_modules/mapbox-gl/src/util/find_pole_of_inaccessibility.js","../node_modules/murmurhash-js/murmurhash3_gc.js","../node_modules/murmurhash-js/murmurhash2_gc.js","../node_modules/murmurhash-js/index.js","../node_modules/mapbox-gl/src/symbol/symbol_layout.js","../node_modules/mapbox-gl/src/symbol/quads.js","../node_modules/mapbox-gl/src/symbol/clip_line.js","../node_modules/mapbox-gl/src/render/glyph_atlas.js","../node_modules/mapbox-gl/src/source/worker_tile.js","../node_modules/mapbox-gl/src/util/performance.js","../node_modules/mapbox-gl/src/source/vector_tile_worker_source.js","../node_modules/mapbox-gl/src/source/raster_dem_tile_worker_source.js","../node_modules/wgs84/index.js","../node_modules/@mapbox/geojson-area/index.js","../node_modules/@mapbox/geojson-rewind/index.js","../node_modules/mapbox-gl/src/source/geojson_wrapper.js","../node_modules/vt-pbf/lib/geojson_wrapper.js","../node_modules/vt-pbf/index.js","../node_modules/mapbox-gl/src/render/draw_debug.js","../node_modules/mapbox-gl/src/render/draw_symbol.js","../node_modules/mapbox-gl/src/render/draw_collision_debug.js","../node_modules/mapbox-gl/src/render/draw_circle.js","../node_modules/mapbox-gl/src/render/draw_heatmap.js","../node_modules/pako/lib/inflate.js","../node_modules/base64-js/index.js","../src/mbtiles_source.js","../src/offline_map.js","../src/index.js","../rollup/mapboxgl.js"],"sourcesContent":["'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","// @flow\n\nimport { AlphaImage } from '../util/image';\n\nimport Protobuf from 'pbf';\nconst border = 3;\n\nimport type {StyleGlyph} from './style_glyph';\n\nfunction readFontstacks(tag: number, glyphs: Array<StyleGlyph>, pbf: Protobuf) {\n    if (tag === 1) {\n        pbf.readMessage(readFontstack, glyphs);\n    }\n}\n\nfunction readFontstack(tag: number, glyphs: Array<StyleGlyph>, pbf: Protobuf) {\n    if (tag === 3) {\n        const {id, bitmap, width, height, left, top, advance} = pbf.readMessage(readGlyph, {});\n        glyphs.push({\n            id,\n            bitmap: new AlphaImage({\n                width: width + 2 * border,\n                height: height + 2 * border\n            }, bitmap),\n            metrics: {width, height, left, top, advance}\n        });\n    }\n}\n\nfunction readGlyph(tag: number, glyph: Object, pbf: Protobuf) {\n    if (tag === 1) glyph.id = pbf.readVarint();\n    else if (tag === 2) glyph.bitmap = pbf.readBytes();\n    else if (tag === 3) glyph.width = pbf.readVarint();\n    else if (tag === 4) glyph.height = pbf.readVarint();\n    else if (tag === 5) glyph.left = pbf.readSVarint();\n    else if (tag === 6) glyph.top = pbf.readSVarint();\n    else if (tag === 7) glyph.advance = pbf.readVarint();\n}\n\nexport default function (data: ArrayBuffer | Uint8Array): Array<StyleGlyph> {\n    return new Protobuf(data).readFields(readFontstacks, []);\n}\n\nexport const GLYPH_PBF_BORDER = border;\n","// @flow\n\nimport { bindAll } from './util';\nimport { serialize, deserialize } from './web_worker_transfer';\n\nimport type {Transferable} from '../types/transferable';\nimport type {Cancelable} from '../types/cancelable';\n\n/**\n * An implementation of the [Actor design pattern](http://en.wikipedia.org/wiki/Actor_model)\n * that maintains the relationship between asynchronous tasks and the objects\n * that spin them off - in this case, tasks like parsing parts of styles,\n * owned by the styles\n *\n * @param {WebWorker} target\n * @param {WebWorker} parent\n * @param {string|number} mapId A unique identifier for the Map instance using this Actor.\n * @private\n */\nclass Actor {\n    target: any;\n    parent: any;\n    mapId: string;\n    callbacks: any;\n    callbackID: number;\n    name: string;\n\n    constructor(target: any, parent: any, mapId: any) {\n        this.target = target;\n        this.parent = parent;\n        this.mapId = mapId;\n        this.callbacks = {};\n        this.callbackID = 0;\n        bindAll(['receive'], this);\n        this.target.addEventListener('message', this.receive, false);\n    }\n\n    /**\n     * Sends a message from a main-thread map to a Worker or from a Worker back to\n     * a main-thread map instance.\n     *\n     * @param type The name of the target method to invoke or '[source-type].[source-name].name' for a method on a WorkerSource.\n     * @param targetMapId A particular mapId to which to send this message.\n     * @private\n     */\n    send(type: string, data: mixed, callback: ?Function, targetMapId: ?string): ?Cancelable {\n        const id = callback ? `${this.mapId}:${this.callbackID++}` : null;\n        if (callback) this.callbacks[id] = callback;\n        const buffers: Array<Transferable> = [];\n        this.target.postMessage({\n            targetMapId,\n            sourceMapId: this.mapId,\n            type,\n            id: String(id),\n            data: serialize(data, buffers)\n        }, buffers);\n        if (callback) {\n            return {\n                cancel: () => this.target.postMessage({\n                    targetMapId,\n                    sourceMapId: this.mapId,\n                    type: '<cancel>',\n                    id: String(id)\n                })\n            };\n        }\n    }\n\n    receive(message: Object) {\n        const data = message.data,\n            id = data.id;\n        let callback;\n\n        if (data.targetMapId && this.mapId !== data.targetMapId)\n            return;\n\n        const done = (err, data) => {\n            delete this.callbacks[id];\n            const buffers: Array<Transferable> = [];\n            this.target.postMessage({\n                sourceMapId: this.mapId,\n                type: '<response>',\n                id: String(id),\n                error: err ? serialize(err) : null,\n                data: serialize(data, buffers)\n            }, buffers);\n        };\n\n        if (data.type === '<response>' || data.type === '<cancel>') {\n            callback = this.callbacks[data.id];\n            delete this.callbacks[data.id];\n            if (callback && data.error) {\n                callback(deserialize(data.error));\n            } else if (callback) {\n                callback(null, deserialize(data.data));\n            }\n        } else if (typeof data.id !== 'undefined' && this.parent[data.type]) {\n            // data.type == 'loadTile', 'removeTile', etc.\n            // Add a placeholder so that we can discover when the done callback was called already.\n            this.callbacks[data.id] = null;\n            const cancelable = this.parent[data.type](data.sourceMapId, deserialize(data.data), done);\n            if (cancelable && this.callbacks[data.id] === null) {\n                // Only add the cancelable callback if the done callback wasn't already called.\n                // Otherwise we will never be able to delete it.\n                this.callbacks[data.id]  = cancelable;\n            }\n        } else if (typeof data.id !== 'undefined' && this.parent.getWorkerSource) {\n            // data.type == sourcetype.method\n            const keys = data.type.split('.');\n            const params = (deserialize(data.data): any);\n            const workerSource = (this.parent: any).getWorkerSource(data.sourceMapId, keys[0], params.source);\n            workerSource[keys[1]](params, done);\n        } else {\n            this.parent[data.type](deserialize(data.data));\n        }\n    }\n\n    remove() {\n        this.target.removeEventListener('message', this.receive, false);\n    }\n}\n\nexport default Actor;\n","export { getURL, getTileBBox, getMercCoords };\n\n\n/**\n * getURL\n *\n * @param    {String}  baseUrl  Base url of the WMS server\n * @param    {String}  layer    Layer name\n * @param    {Number}  x        Tile coordinate x\n * @param    {Number}  y        Tile coordinate y\n * @param    {Number}  z        Tile zoom\n * @param    {Object}  [options]\n * @param    {String}  [options.format='image/png']\n * @param    {String}  [options.service='WMS']\n * @param    {String}  [options.version='1.1.1']\n * @param    {String}  [options.request='GetMap']\n * @param    {String}  [options.srs='EPSG:3857']\n * @param    {Number}  [options.width='256']\n * @param    {Number}  [options.height='256']\n * @returns  {String}  url\n * @example\n * var baseUrl = 'http://geodata.state.nj.us/imagerywms/Natural2015';\n * var layer = 'Natural2015';\n * var url = whoots.getURL(baseUrl, layer, 154308, 197167, 19);\n */\nfunction getURL(baseUrl, layer, x, y, z, options) {\n    options = options || {};\n\n    var url = baseUrl + '?' + [\n        'bbox='    + getTileBBox(x, y, z),\n        'format='  + (options.format || 'image/png'),\n        'service=' + (options.service || 'WMS'),\n        'version=' + (options.version || '1.1.1'),\n        'request=' + (options.request || 'GetMap'),\n        'srs='     + (options.srs || 'EPSG:3857'),\n        'width='   + (options.width || 256),\n        'height='  + (options.height || 256),\n        'layers='  + layer\n    ].join('&');\n\n    return url;\n}\n\n\n/**\n * getTileBBox\n *\n * @param    {Number}  x  Tile coordinate x\n * @param    {Number}  y  Tile coordinate y\n * @param    {Number}  z  Tile zoom\n * @returns  {String}  String of the bounding box\n */\nfunction getTileBBox(x, y, z) {\n    // for Google/OSM tile scheme we need to alter the y\n    y = (Math.pow(2, z) - y - 1);\n\n    var min = getMercCoords(x * 256, y * 256, z),\n        max = getMercCoords((x + 1) * 256, (y + 1) * 256, z);\n\n    return min[0] + ',' + min[1] + ',' + max[0] + ',' + max[1];\n}\n\n\n/**\n * getMercCoords\n *\n * @param    {Number}  x  Pixel coordinate x\n * @param    {Number}  y  Pixel coordinate y\n * @param    {Number}  z  Tile zoom\n * @returns  {Array}   [x, y]\n */\nfunction getMercCoords(x, y, z) {\n    var resolution = (2 * Math.PI * 6378137 / 256) / Math.pow(2, z),\n        merc_x = (x * resolution - 2 * Math.PI  * 6378137 / 2.0),\n        merc_y = (y * resolution - 2 * Math.PI  * 6378137 / 2.0);\n\n    return [merc_x, merc_y];\n}\n","// @flow\n\nimport LngLat from './lng_lat';\n\nimport type {LngLatLike} from './lng_lat';\n\n/**\n * A `LngLatBounds` object represents a geographical bounding box,\n * defined by its southwest and northeast points in longitude and latitude.\n *\n * If no arguments are provided to the constructor, a `null` bounding box is created.\n *\n * Note that any Mapbox GL method that accepts a `LngLatBounds` object as an argument or option\n * can also accept an `Array` of two {@link LngLatLike} constructs and will perform an implicit conversion.\n * This flexible type is documented as {@link LngLatBoundsLike}.\n *\n * @param {LngLatLike} [sw] The southwest corner of the bounding box.\n * @param {LngLatLike} [ne] The northeast corner of the bounding box.\n * @example\n * var sw = new mapboxgl.LngLat(-73.9876, 40.7661);\n * var ne = new mapboxgl.LngLat(-73.9397, 40.8002);\n * var llb = new mapboxgl.LngLatBounds(sw, ne);\n */\nclass LngLatBounds {\n    _ne: LngLat;\n    _sw: LngLat;\n\n    // This constructor is too flexible to type. It should not be so flexible.\n    constructor(sw: any, ne: any) {\n        if (!sw) {\n            // noop\n        } else if (ne) {\n            this.setSouthWest(sw).setNorthEast(ne);\n        } else if (sw.length === 4) {\n            this.setSouthWest([sw[0], sw[1]]).setNorthEast([sw[2], sw[3]]);\n        } else {\n            this.setSouthWest(sw[0]).setNorthEast(sw[1]);\n        }\n    }\n\n    /**\n     * Set the northeast corner of the bounding box\n     *\n     * @param {LngLatLike} ne\n     * @returns {LngLatBounds} `this`\n     */\n    setNorthEast(ne: LngLatLike) {\n        this._ne = ne instanceof LngLat ? new LngLat(ne.lng, ne.lat) : LngLat.convert(ne);\n        return this;\n    }\n\n    /**\n     * Set the southwest corner of the bounding box\n     *\n     * @param {LngLatLike} sw\n     * @returns {LngLatBounds} `this`\n     */\n    setSouthWest(sw: LngLatLike) {\n        this._sw = sw instanceof LngLat ? new LngLat(sw.lng, sw.lat) : LngLat.convert(sw);\n        return this;\n    }\n\n    /**\n     * Extend the bounds to include a given LngLat or LngLatBounds.\n     *\n     * @param {LngLat|LngLatBounds} obj object to extend to\n     * @returns {LngLatBounds} `this`\n     */\n    extend(obj: LngLat | LngLatBounds) {\n        const sw = this._sw,\n            ne = this._ne;\n        let sw2, ne2;\n\n        if (obj instanceof LngLat) {\n            sw2 = obj;\n            ne2 = obj;\n\n        } else if (obj instanceof LngLatBounds) {\n            sw2 = obj._sw;\n            ne2 = obj._ne;\n\n            if (!sw2 || !ne2) return this;\n\n        } else {\n            if (Array.isArray(obj)) {\n                if (obj.every(Array.isArray)) {\n                    return this.extend(LngLatBounds.convert(obj));\n                } else {\n                    return this.extend(LngLat.convert(obj));\n                }\n            }\n            return this;\n        }\n\n        if (!sw && !ne) {\n            this._sw = new LngLat(sw2.lng, sw2.lat);\n            this._ne = new LngLat(ne2.lng, ne2.lat);\n\n        } else {\n            sw.lng = Math.min(sw2.lng, sw.lng);\n            sw.lat = Math.min(sw2.lat, sw.lat);\n            ne.lng = Math.max(ne2.lng, ne.lng);\n            ne.lat = Math.max(ne2.lat, ne.lat);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the geographical coordinate equidistant from the bounding box's corners.\n     *\n     * @returns {LngLat} The bounding box's center.\n     * @example\n     * var llb = new mapboxgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n     * llb.getCenter(); // = LngLat {lng: -73.96365, lat: 40.78315}\n     */\n    getCenter(): LngLat {\n        return new LngLat((this._sw.lng + this._ne.lng) / 2, (this._sw.lat + this._ne.lat) / 2);\n    }\n\n    /**\n     * Returns the southwest corner of the bounding box.\n     *\n     * @returns {LngLat} The southwest corner of the bounding box.\n     */\n    getSouthWest(): LngLat { return this._sw; }\n\n    /**\n    * Returns the northeast corner of the bounding box.\n    *\n    * @returns {LngLat} The northeast corner of the bounding box.\n     */\n    getNorthEast(): LngLat { return this._ne; }\n\n    /**\n    * Returns the northwest corner of the bounding box.\n    *\n    * @returns {LngLat} The northwest corner of the bounding box.\n     */\n    getNorthWest(): LngLat { return new LngLat(this.getWest(), this.getNorth()); }\n\n    /**\n    * Returns the southeast corner of the bounding box.\n    *\n    * @returns {LngLat} The southeast corner of the bounding box.\n     */\n    getSouthEast(): LngLat { return new LngLat(this.getEast(), this.getSouth()); }\n\n    /**\n    * Returns the west edge of the bounding box.\n    *\n    * @returns {number} The west edge of the bounding box.\n     */\n    getWest(): number { return this._sw.lng; }\n\n    /**\n    * Returns the south edge of the bounding box.\n    *\n    * @returns {number} The south edge of the bounding box.\n     */\n    getSouth(): number { return this._sw.lat; }\n\n    /**\n    * Returns the east edge of the bounding box.\n    *\n    * @returns {number} The east edge of the bounding box.\n     */\n    getEast(): number { return this._ne.lng; }\n\n    /**\n    * Returns the north edge of the bounding box.\n    *\n    * @returns {number} The north edge of the bounding box.\n     */\n    getNorth(): number { return this._ne.lat; }\n\n    /**\n     * Returns the bounding box represented as an array.\n     *\n     * @returns {Array<Array<number>>} The bounding box represented as an array, consisting of the\n     *   southwest and northeast coordinates of the bounding represented as arrays of numbers.\n     * @example\n     * var llb = new mapboxgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n     * llb.toArray(); // = [[-73.9876, 40.7661], [-73.9397, 40.8002]]\n     */\n    toArray() {\n        return [this._sw.toArray(), this._ne.toArray()];\n    }\n\n    /**\n     * Return the bounding box represented as a string.\n     *\n     * @returns {string} The bounding box represents as a string of the format\n     *   `'LngLatBounds(LngLat(lng, lat), LngLat(lng, lat))'`.\n     * @example\n     * var llb = new mapboxgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n     * llb.toString(); // = \"LngLatBounds(LngLat(-73.9876, 40.7661), LngLat(-73.9397, 40.8002))\"\n     */\n    toString() {\n        return `LngLatBounds(${this._sw.toString()}, ${this._ne.toString()})`;\n    }\n\n    /**\n     * Check if the bounding box is an empty/`null`-type box.\n     *\n     * @returns {boolean} True if bounds have been defined, otherwise false.\n     */\n    isEmpty() {\n        return !(this._sw && this._ne);\n    }\n\n    /**\n     * Converts an array to a `LngLatBounds` object.\n     *\n     * If a `LngLatBounds` object is passed in, the function returns it unchanged.\n     *\n     * Internally, the function calls `LngLat#convert` to convert arrays to `LngLat` values.\n     *\n     * @param {LngLatBoundsLike} input An array of two coordinates to convert, or a `LngLatBounds` object to return.\n     * @returns {LngLatBounds} A new `LngLatBounds` object, if a conversion occurred, or the original `LngLatBounds` object.\n     * @example\n     * var arr = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n     * var llb = mapboxgl.LngLatBounds.convert(arr);\n     * llb;   // = LngLatBounds {_sw: LngLat {lng: -73.9876, lat: 40.7661}, _ne: LngLat {lng: -73.9397, lat: 40.8002}}\n     */\n    static convert(input: LngLatBoundsLike): LngLatBounds {\n        if (!input || input instanceof LngLatBounds) return input;\n        return new LngLatBounds(input);\n    }\n}\n\n/**\n * A {@link LngLatBounds} object, an array of {@link LngLatLike} objects in [sw, ne] order,\n * or an array of numbers in [west, south, east, north] order.\n *\n * @typedef {LngLatBounds | [LngLatLike, LngLatLike] | [number, number, number, number]} LngLatBoundsLike\n * @example\n * var v1 = new mapboxgl.LngLatBounds(\n *   new mapboxgl.LngLat(-73.9876, 40.7661),\n *   new mapboxgl.LngLat(-73.9397, 40.8002)\n * );\n * var v2 = new mapboxgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002])\n * var v3 = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n */\nexport type LngLatBoundsLike = LngLatBounds | [LngLatLike, LngLatLike] | [number, number, number, number];\n\nexport default LngLatBounds;\n","// @flow\n\nimport { wrap } from '../util/util';\nimport LngLatBounds from './lng_lat_bounds';\n\n/**\n * A `LngLat` object represents a given longitude and latitude coordinate, measured in degrees.\n *\n * Mapbox GL uses longitude, latitude coordinate order (as opposed to latitude, longitude) to match GeoJSON.\n *\n * Note that any Mapbox GL method that accepts a `LngLat` object as an argument or option\n * can also accept an `Array` of two numbers and will perform an implicit conversion.\n * This flexible type is documented as {@link LngLatLike}.\n *\n * @param {number} lng Longitude, measured in degrees.\n * @param {number} lat Latitude, measured in degrees.\n * @example\n * var ll = new mapboxgl.LngLat(-73.9749, 40.7736);\n * @see [Get coordinates of the mouse pointer](https://www.mapbox.com/mapbox-gl-js/example/mouse-position/)\n * @see [Display a popup](https://www.mapbox.com/mapbox-gl-js/example/popup/)\n * @see [Highlight features within a bounding box](https://www.mapbox.com/mapbox-gl-js/example/using-box-queryrenderedfeatures/)\n * @see [Create a timeline animation](https://www.mapbox.com/mapbox-gl-js/example/timeline-animation/)\n */\nclass LngLat {\n    lng: number;\n    lat: number;\n\n    constructor(lng: number, lat: number) {\n        if (isNaN(lng) || isNaN(lat)) {\n            throw new Error(`Invalid LngLat object: (${lng}, ${lat})`);\n        }\n        this.lng = +lng;\n        this.lat = +lat;\n        if (this.lat > 90 || this.lat < -90) {\n            throw new Error('Invalid LngLat latitude value: must be between -90 and 90');\n        }\n    }\n\n    /**\n     * Returns a new `LngLat` object whose longitude is wrapped to the range (-180, 180).\n     *\n     * @returns {LngLat} The wrapped `LngLat` object.\n     * @example\n     * var ll = new mapboxgl.LngLat(286.0251, 40.7736);\n     * var wrapped = ll.wrap();\n     * wrapped.lng; // = -73.9749\n     */\n    wrap() {\n        return new LngLat(wrap(this.lng, -180, 180), this.lat);\n    }\n\n    /**\n     * Returns the coordinates represented as an array of two numbers.\n     *\n     * @returns {Array<number>} The coordinates represeted as an array of longitude and latitude.\n     * @example\n     * var ll = new mapboxgl.LngLat(-73.9749, 40.7736);\n     * ll.toArray(); // = [-73.9749, 40.7736]\n     */\n    toArray() {\n        return [this.lng, this.lat];\n    }\n\n    /**\n     * Returns the coordinates represent as a string.\n     *\n     * @returns {string} The coordinates represented as a string of the format `'LngLat(lng, lat)'`.\n     * @example\n     * var ll = new mapboxgl.LngLat(-73.9749, 40.7736);\n     * ll.toString(); // = \"LngLat(-73.9749, 40.7736)\"\n     */\n    toString() {\n        return `LngLat(${this.lng}, ${this.lat})`;\n    }\n\n    /**\n     * Returns a `LngLatBounds` from the coordinates extended by a given `radius`.\n     *\n     * @param {number} [radius=0] Distance in meters from the coordinates to extend the bounds.\n     * @returns {LngLatBounds} A new `LngLatBounds` object representing the coordinates extended by the `radius`.\n     * @example\n     * var ll = new mapboxgl.LngLat(-73.9749, 40.7736);\n     * ll.toBounds(100).toArray(); // = [[-73.97501862141328, 40.77351016847229], [-73.97478137858673, 40.77368983152771]]\n     */\n    toBounds(radius?: number = 0) {\n        const earthCircumferenceInMetersAtEquator = 40075017;\n        const latAccuracy = 360 * radius / earthCircumferenceInMetersAtEquator,\n            lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);\n\n        return new LngLatBounds(new LngLat(this.lng - lngAccuracy, this.lat - latAccuracy),\n            new LngLat(this.lng + lngAccuracy, this.lat + latAccuracy));\n    }\n\n    /**\n     * Converts an array of two numbers or an object with `lng` and `lat` or `lon` and `lat` properties\n     * to a `LngLat` object.\n     *\n     * If a `LngLat` object is passed in, the function returns it unchanged.\n     *\n     * @param {LngLatLike} input An array of two numbers or object to convert, or a `LngLat` object to return.\n     * @returns {LngLat} A new `LngLat` object, if a conversion occurred, or the original `LngLat` object.\n     * @example\n     * var arr = [-73.9749, 40.7736];\n     * var ll = mapboxgl.LngLat.convert(arr);\n     * ll;   // = LngLat {lng: -73.9749, lat: 40.7736}\n     */\n    static convert(input: LngLatLike): LngLat {\n        if (input instanceof LngLat) {\n            return input;\n        }\n        if (Array.isArray(input) && (input.length === 2 || input.length === 3)) {\n            return new LngLat(Number(input[0]), Number(input[1]));\n        }\n        if (!Array.isArray(input) && typeof input === 'object' && input !== null) {\n            return new LngLat(\n                // flow can't refine this to have one of lng or lat, so we have to cast to any\n                Number('lng' in input ? (input: any).lng : (input: any).lon),\n                Number(input.lat)\n            );\n        }\n        throw new Error(\"`LngLatLike` argument must be specified as a LngLat instance, an object {lng: <lng>, lat: <lat>}, an object {lon: <lng>, lat: <lat>}, or an array of [<lng>, <lat>]\");\n    }\n}\n\n/**\n * A {@link LngLat} object, an array of two numbers representing longitude and latitude,\n * or an object with `lng` and `lat` or `lon` and `lat` properties.\n *\n * @typedef {LngLat | {lng: number, lat: number} | {lon: number, lat: number} | [number, number]} LngLatLike\n * @example\n * var v1 = new mapboxgl.LngLat(-122.420679, 37.772537);\n * var v2 = [-122.420679, 37.772537];\n * var v3 = {lon: -122.420679, lat: 37.772537};\n */\nexport type LngLatLike = LngLat | {lng: number, lat: number} | {lon: number, lat: number} | [number, number];\n\nexport default LngLat;\n","// @flow\n\nimport LngLat from '../geo/lng_lat';\nimport type {LngLatLike} from '../geo/lng_lat';\n\n/*\n * The circumference of the world in meters at the given latitude.\n */\nfunction circumferenceAtLatitude(latitude: number) {\n    const circumference = 2 * Math.PI * 6378137;\n    return circumference * Math.cos(latitude * Math.PI / 180);\n}\n\nexport function mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nexport function mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nexport function mercatorZfromAltitude(altitude: number, lat: number) {\n    return altitude / circumferenceAtLatitude(lat);\n}\n\nexport function lngFromMercatorX(x: number) {\n    return x * 360 - 180;\n}\n\nexport function latFromMercatorY(y: number) {\n    const y2 = 180 - y * 360;\n    return 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90;\n}\n\nexport function altitudeFromMercatorZ(z: number, y: number) {\n    return z * circumferenceAtLatitude(latFromMercatorY(y));\n}\n\n/**\n * A `MercatorCoordinate` object represents a projected three dimensional position.\n *\n * `MercatorCoordinate` uses the web mercator projection ([EPSG:3857](https://epsg.io/3857)) with slightly different units:\n * - the size of 1 unit is the width of the projected world instead of the \"mercator meter\"\n * - the origin of the coordinate space is at the north-west corner instead of the middle\n *\n * For example, `MercatorCoordinate(0, 0, 0)` is the north-west corner of the mercator world and\n * `MercatorCoordinate(1, 1, 0)` is the south-east corner. If you are familiar with\n * [vector tiles](https://github.com/mapbox/vector-tile-spec) it may be helpful to think\n * of the coordinate space as the `0/0/0` tile with an extent of `1`.\n *\n * The `z` dimension of `MercatorCoordinate` is conformal. A cube in the mercator coordinate space would be rendered as a cube.\n *\n * @param {number} x The x component of the position.\n * @param {number} y The y component of the position.\n * @param {number} z The z component of the position.\n * @example\n * var nullIsland = new mapboxgl.MercatorCoordinate(0.5, 0.5, 0);\n *\n * @see [Add a custom style layer](https://www.mapbox.com/mapbox-gl-js/example/custom-style-layer/)\n */\nclass MercatorCoordinate {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number, y: number, z: number = 0) {\n        this.x = +x;\n        this.y = +y;\n        this.z = +z;\n    }\n\n    /**\n     * Project a `LngLat` to a `MercatorCoordinate`.\n     *\n     * @param {LngLatLike} lngLatLike The location to project.\n     * @param {number} altitude The altitude in meters of the position.\n     * @returns {MercatorCoordinate} The projected mercator coordinate.\n     * @example\n     * var coord = mapboxgl.MercatorCoordinate.fromLngLat({ lng: 0, lat: 0}, 0);\n     * coord; // MercatorCoordinate(0.5, 0.5, 0)\n     */\n    static fromLngLat(lngLatLike: LngLatLike, altitude: number = 0) {\n        const lngLat = LngLat.convert(lngLatLike);\n\n        return new MercatorCoordinate(\n                mercatorXfromLng(lngLat.lng),\n                mercatorYfromLat(lngLat.lat),\n                mercatorZfromAltitude(altitude, lngLat.lat));\n    }\n\n    /**\n     * Returns the `LngLat` for the coordinate.\n     *\n     * @returns {LngLat} The `LngLat` object.\n     * @example\n     * var coord = new mapboxgl.MercatorCoordinate(0.5, 0.5, 0);\n     * var latLng = coord.toLngLat(); // LngLat(0, 0)\n     */\n    toLngLat() {\n        return new LngLat(\n                lngFromMercatorX(this.x),\n                latFromMercatorY(this.y));\n    }\n\n    /**\n     * Returns the altitude in meters of the coordinate.\n     *\n     * @returns {number} The altitude in meters.\n     * @example\n     * var coord = new mapboxgl.MercatorCoordinate(0, 0, 0.02);\n     * coord.toAltitude(); // 6914.281956295339\n     */\n    toAltitude() {\n        return altitudeFromMercatorZ(this.z, this.y);\n    }\n}\n\nexport default MercatorCoordinate;\n","// @flow\n\nimport {getTileBBox} from '@mapbox/whoots-js';\nimport EXTENT from '../data/extent';\nimport Point from '@mapbox/point-geometry';\nimport MercatorCoordinate from '../geo/mercator_coordinate';\n\nimport assert from 'assert';\nimport { register } from '../util/web_worker_transfer';\n\nexport class CanonicalTileID {\n    z: number;\n    x: number;\n    y: number;\n    key: number;\n\n    constructor(z: number, x: number, y: number) {\n        assert(z >= 0 && z <= 25);\n        assert(x >= 0 && x < Math.pow(2, z));\n        assert(y >= 0 && y < Math.pow(2, z));\n        this.z = z;\n        this.x = x;\n        this.y = y;\n        this.key = calculateKey(0, z, x, y);\n    }\n\n    equals(id: CanonicalTileID) {\n        return this.z === id.z && this.x === id.x && this.y === id.y;\n    }\n\n    // given a list of urls, choose a url template and return a tile URL\n    url(urls: Array<string>, scheme: ?string) {\n        const bbox = getTileBBox(this.x, this.y, this.z);\n        const quadkey = getQuadkey(this.z, this.x, this.y);\n\n        return urls[(this.x + this.y) % urls.length]\n            .replace('{prefix}', (this.x % 16).toString(16) + (this.y % 16).toString(16))\n            .replace('{z}', String(this.z))\n            .replace('{x}', String(this.x))\n            .replace('{y}', String(scheme === 'tms' ? (Math.pow(2, this.z) - this.y - 1) : this.y))\n            .replace('{quadkey}', quadkey)\n            .replace('{bbox-epsg-3857}', bbox);\n    }\n\n    getTilePoint(coord: MercatorCoordinate) {\n        const tilesAtZoom = Math.pow(2, this.z);\n        return new Point(\n            (coord.x * tilesAtZoom - this.x) * EXTENT,\n            (coord.y * tilesAtZoom - this.y) * EXTENT);\n    }\n}\n\nexport class UnwrappedTileID {\n    wrap: number;\n    canonical: CanonicalTileID;\n    key: number;\n\n    constructor(wrap: number, canonical: CanonicalTileID) {\n        this.wrap = wrap;\n        this.canonical = canonical;\n        this.key = calculateKey(wrap, canonical.z, canonical.x, canonical.y);\n    }\n}\n\nexport class OverscaledTileID {\n    overscaledZ: number;\n    wrap: number;\n    canonical: CanonicalTileID;\n    key: number;\n    posMatrix: Float32Array;\n\n    constructor(overscaledZ: number, wrap: number, z: number, x: number, y: number) {\n        assert(overscaledZ >= z);\n        this.overscaledZ = overscaledZ;\n        this.wrap = wrap;\n        this.canonical = new CanonicalTileID(z, +x, +y);\n        this.key = calculateKey(wrap, overscaledZ, x, y);\n    }\n\n    equals(id: OverscaledTileID) {\n        return this.overscaledZ === id.overscaledZ && this.wrap === id.wrap && this.canonical.equals(id.canonical);\n    }\n\n    scaledTo(targetZ: number) {\n        assert(targetZ <= this.overscaledZ);\n        const zDifference = this.canonical.z - targetZ;\n        if (targetZ > this.canonical.z) {\n            return new OverscaledTileID(targetZ, this.wrap, this.canonical.z, this.canonical.x, this.canonical.y);\n        } else {\n            return new OverscaledTileID(targetZ, this.wrap, targetZ, this.canonical.x >> zDifference, this.canonical.y >> zDifference);\n        }\n    }\n\n    isChildOf(parent: OverscaledTileID) {\n        if (parent.wrap !== this.wrap) {\n            // We can't be a child if we're in a different world copy\n            return false;\n        }\n        const zDifference = this.canonical.z - parent.canonical.z;\n        // We're first testing for z == 0, to avoid a 32 bit shift, which is undefined.\n        return parent.overscaledZ === 0 || (\n            parent.overscaledZ < this.overscaledZ &&\n                parent.canonical.x === (this.canonical.x >> zDifference) &&\n                parent.canonical.y === (this.canonical.y >> zDifference));\n    }\n\n    children(sourceMaxZoom: number) {\n        if (this.overscaledZ >= sourceMaxZoom) {\n            // return a single tile coord representing a an overscaled tile\n            return [new OverscaledTileID(this.overscaledZ + 1, this.wrap, this.canonical.z, this.canonical.x, this.canonical.y)];\n        }\n\n        const z = this.canonical.z + 1;\n        const x = this.canonical.x * 2;\n        const y = this.canonical.y * 2;\n        return [\n            new OverscaledTileID(z, this.wrap, z, x, y),\n            new OverscaledTileID(z, this.wrap, z, x + 1, y),\n            new OverscaledTileID(z, this.wrap, z, x, y + 1),\n            new OverscaledTileID(z, this.wrap, z, x + 1, y + 1)\n        ];\n    }\n\n    isLessThan(rhs: OverscaledTileID) {\n        if (this.wrap < rhs.wrap) return true;\n        if (this.wrap > rhs.wrap) return false;\n\n        if (this.overscaledZ < rhs.overscaledZ) return true;\n        if (this.overscaledZ > rhs.overscaledZ) return false;\n\n        if (this.canonical.x < rhs.canonical.x) return true;\n        if (this.canonical.x > rhs.canonical.x) return false;\n\n        if (this.canonical.y < rhs.canonical.y) return true;\n        return false;\n    }\n\n    wrapped() {\n        return new OverscaledTileID(this.overscaledZ, 0, this.canonical.z, this.canonical.x, this.canonical.y);\n    }\n\n    unwrapTo(wrap: number) {\n        return new OverscaledTileID(this.overscaledZ, wrap, this.canonical.z, this.canonical.x, this.canonical.y);\n    }\n\n    overscaleFactor() {\n        return Math.pow(2, this.overscaledZ - this.canonical.z);\n    }\n\n    toUnwrapped() {\n        return new UnwrappedTileID(this.wrap, this.canonical);\n    }\n\n    toString() {\n        return `${this.overscaledZ}/${this.canonical.x}/${this.canonical.y}`;\n    }\n\n    getTilePoint(coord: MercatorCoordinate) {\n        return this.canonical.getTilePoint(new MercatorCoordinate(coord.x - this.wrap, coord.y));\n    }\n}\n\nfunction calculateKey(wrap: number, z: number, x: number, y: number) {\n    wrap *= 2;\n    if (wrap < 0) wrap = wrap * -1 - 1;\n    const dim = 1 << z;\n    return ((dim * dim * wrap + dim * y + x) * 32) + z;\n}\n\n\nfunction getQuadkey(z, x, y) {\n    let quadkey = '', mask;\n    for (let i = z; i > 0; i--) {\n        mask = 1 << (i - 1);\n        quadkey += ((x & mask ? 1 : 0) + (y & mask ? 2 : 0));\n    }\n    return quadkey;\n}\n\nregister('CanonicalTileID', CanonicalTileID);\nregister('OverscaledTileID', OverscaledTileID, {omit: ['posMatrix']});\n","// @flow\n\nimport LngLatBounds from '../geo/lng_lat_bounds';\nimport {mercatorXfromLng, mercatorYfromLat} from '../geo/mercator_coordinate';\n\nimport type {CanonicalTileID} from './tile_id';\n\nclass TileBounds {\n    bounds: LngLatBounds;\n    minzoom: number;\n    maxzoom: number;\n\n    constructor(bounds: [number, number, number, number], minzoom: ?number, maxzoom: ?number) {\n        this.bounds = LngLatBounds.convert(this.validateBounds(bounds));\n        this.minzoom = minzoom || 0;\n        this.maxzoom = maxzoom || 24;\n    }\n\n    validateBounds(bounds: [number, number, number, number]) {\n        // make sure the bounds property contains valid longitude and latitudes\n        if (!Array.isArray(bounds) || bounds.length !== 4) return [-180, -90, 180, 90];\n        return [Math.max(-180, bounds[0]), Math.max(-90, bounds[1]), Math.min(180, bounds[2]), Math.min(90, bounds[3])];\n    }\n\n    contains(tileID: CanonicalTileID) {\n        const worldSize = Math.pow(2, tileID.z);\n        const level = {\n            minX: Math.floor(mercatorXfromLng(this.bounds.getWest()) * worldSize),\n            minY: Math.floor(mercatorYfromLat(this.bounds.getNorth()) * worldSize),\n            maxX: Math.ceil(mercatorXfromLng(this.bounds.getEast()) * worldSize),\n            maxY: Math.ceil(mercatorYfromLat(this.bounds.getSouth()) * worldSize)\n        };\n        const hit = tileID.x >= level.minX && tileID.x < level.maxX && tileID.y >= level.minY && tileID.y < level.maxY;\n        return hit;\n    }\n}\n\nexport default TileBounds;\n","// @flow\n\nimport { extend, pick } from '../util/util';\n\nimport { getImage, ResourceType } from '../util/ajax';\nimport { Event, ErrorEvent, Evented } from '../util/evented';\nimport loadTileJSON from './load_tilejson';\nimport { normalizeTileURL as normalizeURL, postTurnstileEvent, postMapLoadEvent } from '../util/mapbox';\nimport TileBounds from './tile_bounds';\nimport Texture from '../render/texture';\n\nimport type {Source} from './source';\nimport type {OverscaledTileID} from './tile_id';\nimport type Map from '../ui/map';\nimport type Dispatcher from '../util/dispatcher';\nimport type Tile from './tile';\nimport type {Callback} from '../types/callback';\nimport type {Cancelable} from '../types/cancelable';\nimport type {\n    RasterSourceSpecification,\n    RasterDEMSourceSpecification\n} from '../style-spec/types';\n\nclass RasterTileSource extends Evented implements Source {\n    type: 'raster' | 'raster-dem';\n    id: string;\n    minzoom: number;\n    maxzoom: number;\n    url: string;\n    scheme: string;\n    tileSize: number;\n\n    bounds: ?[number, number, number, number];\n    tileBounds: TileBounds;\n    roundZoom: boolean;\n    dispatcher: Dispatcher;\n    map: Map;\n    tiles: Array<string>;\n\n    _loaded: boolean;\n    _options: RasterSourceSpecification | RasterDEMSourceSpecification;\n    _tileJSONRequest: ?Cancelable;\n\n    constructor(id: string, options: RasterSourceSpecification | RasterDEMSourceSpecification, dispatcher: Dispatcher, eventedParent: Evented) {\n        super();\n        this.id = id;\n        this.dispatcher = dispatcher;\n        this.setEventedParent(eventedParent);\n\n        this.type = 'raster';\n        this.minzoom = 0;\n        this.maxzoom = 22;\n        this.roundZoom = true;\n        this.scheme = 'xyz';\n        this.tileSize = 512;\n        this._loaded = false;\n\n        this._options = extend({}, options);\n        extend(this, pick(options, ['url', 'scheme', 'tileSize']));\n    }\n\n    load() {\n        this.fire(new Event('dataloading', {dataType: 'source'}));\n        this._tileJSONRequest = loadTileJSON(this._options, this.map._transformRequest, (err, tileJSON) => {\n            this._tileJSONRequest = null;\n            if (err) {\n                this.fire(new ErrorEvent(err));\n            } else if (tileJSON) {\n                extend(this, tileJSON);\n                if (tileJSON.bounds) this.tileBounds = new TileBounds(tileJSON.bounds, this.minzoom, this.maxzoom);\n\n                postTurnstileEvent(tileJSON.tiles);\n                postMapLoadEvent(tileJSON.tiles, this.map._getMapId());\n\n                // `content` is included here to prevent a race condition where `Style#_updateSources` is called\n                // before the TileJSON arrives. this makes sure the tiles needed are loaded once TileJSON arrives\n                // ref: https://github.com/mapbox/mapbox-gl-js/pull/4347#discussion_r104418088\n                this.fire(new Event('data', {dataType: 'source', sourceDataType: 'metadata'}));\n                this.fire(new Event('data', {dataType: 'source', sourceDataType: 'content'}));\n            }\n        });\n    }\n\n    onAdd(map: Map) {\n        this.map = map;\n        this.load();\n    }\n\n    onRemove() {\n        if (this._tileJSONRequest) {\n            this._tileJSONRequest.cancel();\n            this._tileJSONRequest = null;\n        }\n    }\n\n    serialize() {\n        return extend({}, this._options);\n    }\n\n    hasTile(tileID: OverscaledTileID) {\n        return !this.tileBounds || this.tileBounds.contains(tileID.canonical);\n    }\n\n    loadTile(tile: Tile, callback: Callback<void>) {\n        const url = normalizeURL(tile.tileID.canonical.url(this.tiles, this.scheme), this.url, this.tileSize);\n        tile.request = getImage(this.map._transformRequest(url, ResourceType.Tile), (err, img) => {\n            delete tile.request;\n\n            if (tile.aborted) {\n                tile.state = 'unloaded';\n                callback(null);\n            } else if (err) {\n                tile.state = 'errored';\n                callback(err);\n            } else if (img) {\n                if (this.map._refreshExpiredTiles) tile.setExpiryData(img);\n                delete (img: any).cacheControl;\n                delete (img: any).expires;\n\n                const context = this.map.painter.context;\n                const gl = context.gl;\n                tile.texture = this.map.painter.getTileTexture(img.width);\n                if (tile.texture) {\n                    tile.texture.update(img, { useMipmap: true });\n                } else {\n                    tile.texture = new Texture(context, img, gl.RGBA, { useMipmap: true });\n                    tile.texture.bind(gl.LINEAR, gl.CLAMP_TO_EDGE, gl.LINEAR_MIPMAP_NEAREST);\n\n                    if (context.extTextureFilterAnisotropic) {\n                        gl.texParameterf(gl.TEXTURE_2D, context.extTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT, context.extTextureFilterAnisotropicMax);\n                    }\n                }\n\n                tile.state = 'loaded';\n\n                callback(null);\n            }\n        });\n    }\n\n    abortTile(tile: Tile, callback: Callback<void>) {\n        if (tile.request) {\n            tile.request.cancel();\n            delete tile.request;\n        }\n        callback();\n    }\n\n    unloadTile(tile: Tile, callback: Callback<void>) {\n        if (tile.texture) this.map.painter.saveTileTexture(tile.texture);\n        callback();\n    }\n\n    hasTransition() {\n        return false;\n    }\n}\n\nexport default RasterTileSource;\n","// @flow\nimport { RGBAImage } from '../util/image';\n\nimport { warnOnce } from '../util/util';\nimport { register } from '../util/web_worker_transfer';\n\n// DEMData is a data structure for decoding, backfilling, and storing elevation data for processing in the hillshade shaders\n// data can be populated either from a pngraw image tile or from serliazed data sent back from a worker. When data is initially\n// loaded from a image tile, we decode the pixel values using the appropriate decoding formula, but we store the\n// elevation data as an Int32 value. we add 65536 (2^16) to eliminate negative values and enable the use of\n// integer overflow when creating the texture used in the hillshadePrepare step.\n\n// DEMData also handles the backfilling of data from a tile's neighboring tiles. This is necessary because we use a pixel's 8\n// surrounding pixel values to compute the slope at that pixel, and we cannot accurately calculate the slope at pixels on a\n// tile's edge without backfilling from neighboring tiles.\n\nexport default class DEMData {\n    uid: string;\n    data: Int32Array;\n    stride: number;\n    dim: number;\n\n    constructor(uid: string, data: RGBAImage, encoding: \"mapbox\" | \"terrarium\") {\n        this.uid = uid;\n        if (data.height !== data.width) throw new RangeError('DEM tiles must be square');\n        if (encoding && encoding !== \"mapbox\" && encoding !== \"terrarium\") return warnOnce(\n            `\"${encoding}\" is not a valid encoding type. Valid types include \"mapbox\" and \"terrarium\".`\n        );\n        const dim = this.dim = data.height;\n        this.stride = this.dim + 2;\n        this.data = new Int32Array(this.stride * this.stride);\n\n        const pixels = data.data;\n        const unpack = encoding === \"terrarium\" ? this._unpackTerrarium : this._unpackMapbox;\n        for (let y = 0; y < dim; y++) {\n            for (let x = 0; x < dim; x++) {\n                const i = y * dim + x;\n                const j = i * 4;\n                this.set(x, y, unpack(pixels[j], pixels[j + 1], pixels[j + 2]));\n            }\n        }\n\n        // in order to avoid flashing seams between tiles, here we are initially populating a 1px border of pixels around the image\n        // with the data of the nearest pixel from the image. this data is eventually replaced when the tile's neighboring\n        // tiles are loaded and the accurate data can be backfilled using DEMData#backfillBorder\n        for (let x = 0; x < dim; x++) {\n            // left vertical border\n            this.set(-1, x, this.get(0, x));\n            // right vertical border\n            this.set(dim, x, this.get(dim - 1, x));\n            // left horizontal border\n            this.set(x, -1, this.get(x, 0));\n            // right horizontal border\n            this.set(x, dim, this.get(x, dim - 1));\n        }\n        // corners\n        this.set(-1, -1, this.get(0, 0));\n        this.set(dim, -1, this.get(dim - 1, 0));\n        this.set(-1, dim, this.get(0, dim - 1));\n        this.set(dim, dim, this.get(dim - 1, dim - 1));\n    }\n\n    set(x: number, y: number, value: number) {\n        this.data[this._idx(x, y)] = value + 65536;\n    }\n\n    get(x: number, y: number) {\n        return this.data[this._idx(x, y)] - 65536;\n    }\n\n    _idx(x: number, y: number) {\n        if (x < -1 || x >= this.dim + 1 ||  y < -1 || y >= this.dim + 1) throw new RangeError('out of range source coordinates for DEM data');\n        return (y + 1) * this.stride + (x + 1);\n    }\n\n    _unpackMapbox(r: number, g: number, b: number) {\n        // unpacking formula for mapbox.terrain-rgb:\n        // https://www.mapbox.com/help/access-elevation-data/#mapbox-terrain-rgb\n        return ((r * 256 * 256 + g * 256.0 + b) / 10.0 - 10000.0);\n    }\n\n    _unpackTerrarium(r: number, g: number, b: number) {\n        // unpacking formula for mapzen terrarium:\n        // https://aws.amazon.com/public-datasets/terrain/\n        return ((r * 256 + g + b / 256) - 32768.0);\n    }\n\n    getPixels() {\n        return new RGBAImage({width: this.stride, height: this.stride}, new Uint8Array(this.data.buffer));\n    }\n\n    backfillBorder(borderTile: DEMData, dx: number, dy: number) {\n        if (this.dim !== borderTile.dim) throw new Error('dem dimension mismatch');\n\n        let xMin = dx * this.dim,\n            xMax = dx * this.dim + this.dim,\n            yMin = dy * this.dim,\n            yMax = dy * this.dim + this.dim;\n\n        switch (dx) {\n        case -1:\n            xMin = xMax - 1;\n            break;\n        case 1:\n            xMax = xMin + 1;\n            break;\n        }\n\n        switch (dy) {\n        case -1:\n            yMin = yMax - 1;\n            break;\n        case 1:\n            yMax = yMin + 1;\n            break;\n        }\n\n        const ox = -dx * this.dim;\n        const oy = -dy * this.dim;\n        for (let y = yMin; y < yMax; y++) {\n            for (let x = xMin; x < xMax; x++) {\n                this.set(x, y, borderTile.get(x + ox, y + oy));\n            }\n        }\n    }\n}\n\nregister('DEMData', DEMData);\n","\nimport refProperties from './util/ref_properties';\n\nfunction stringify(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify(val)},`;\n        }\n        return `${str}]`;\n    }\n\n    const keys = Object.keys(obj).sort();\n\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\n\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify(layer[k])}`;\n    }\n    return key;\n}\n\nexport default groupByLayout;\n\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers) {\n    const groups = {};\n\n    for (let i = 0; i < layers.length; i++) {\n        const k = getKey(layers[i]);\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n\n    const result = [];\n\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n\n    return result;\n}\n","// @flow\n\nimport StyleLayer from './style_layer';\nimport createStyleLayer from './create_style_layer';\n\nimport { values } from '../util/util';\nimport featureFilter from '../style-spec/feature_filter';\nimport groupByLayout from '../style-spec/group_by_layout';\n\nimport type {TypedStyleLayer} from './style_layer/typed_style_layer';\nimport type {LayerSpecification} from '../style-spec/types';\n\nexport type LayerConfigs = { [string]: LayerSpecification };\nexport type Family<Layer: TypedStyleLayer> = Array<Layer>;\n\nclass StyleLayerIndex {\n    familiesBySource: { [source: string]: { [sourceLayer: string]: Array<Family<*>> } };\n\n    _layerConfigs: LayerConfigs;\n    _layers: { [string]: StyleLayer };\n\n    constructor(layerConfigs: ?Array<LayerSpecification>) {\n        if (layerConfigs) {\n            this.replace(layerConfigs);\n        }\n    }\n\n    replace(layerConfigs: Array<LayerSpecification>) {\n        this._layerConfigs = {};\n        this._layers = {};\n        this.update(layerConfigs, []);\n    }\n\n    update(layerConfigs: Array<LayerSpecification>, removedIds: Array<string>) {\n        for (const layerConfig of layerConfigs) {\n            this._layerConfigs[layerConfig.id] = layerConfig;\n\n            const layer = this._layers[layerConfig.id] = createStyleLayer(layerConfig);\n            layer._featureFilter = featureFilter(layer.filter);\n        }\n        for (const id of removedIds) {\n            delete this._layerConfigs[id];\n            delete this._layers[id];\n        }\n\n        this.familiesBySource = {};\n\n        const groups = groupByLayout(values(this._layerConfigs));\n\n        for (const layerConfigs of groups) {\n            const layers = layerConfigs.map((layerConfig) => this._layers[layerConfig.id]);\n\n            const layer = layers[0];\n            if (layer.visibility === 'none') {\n                continue;\n            }\n\n            const sourceId = layer.source || '';\n            let sourceGroup = this.familiesBySource[sourceId];\n            if (!sourceGroup) {\n                sourceGroup = this.familiesBySource[sourceId] = {};\n            }\n\n            const sourceLayerId = layer.sourceLayer || '_geojsonTileLayer';\n            let sourceLayerFamilies = sourceGroup[sourceLayerId];\n            if (!sourceLayerFamilies) {\n                sourceLayerFamilies = sourceGroup[sourceLayerId] = [];\n            }\n\n            sourceLayerFamilies.push(layers);\n        }\n    }\n}\n\nexport default StyleLayerIndex;\n","// @flow\n\nexport default checkMaxAngle;\n\nimport type Point from '@mapbox/point-geometry';\nimport type Anchor from './anchor';\n\n/**\n * Labels placed around really sharp angles aren't readable. Check if any\n * part of the potential label has a combined angle that is too big.\n *\n * @param line\n * @param anchor The point on the line around which the label is anchored.\n * @param labelLength The length of the label in geometry units.\n * @param windowSize The check fails if the combined angles within a part of the line that is `windowSize` long is too big.\n * @param maxAngle The maximum combined angle that any window along the label is allowed to have.\n *\n * @returns {boolean} whether the label should be placed\n * @private\n */\nfunction checkMaxAngle(line: Array<Point>, anchor: Anchor, labelLength: number, windowSize: number, maxAngle: number) {\n\n    // horizontal labels always pass\n    if (anchor.segment === undefined) return true;\n\n    let p = anchor;\n    let index = anchor.segment + 1;\n    let anchorDistance = 0;\n\n    // move backwards along the line to the first segment the label appears on\n    while (anchorDistance > -labelLength / 2) {\n        index--;\n\n        // there isn't enough room for the label after the beginning of the line\n        if (index < 0) return false;\n\n        anchorDistance -= line[index].dist(p);\n        p = line[index];\n    }\n\n    anchorDistance += line[index].dist(line[index + 1]);\n    index++;\n\n    // store recent corners and their total angle difference\n    const recentCorners = [];\n    let recentAngleDelta = 0;\n\n    // move forwards by the length of the label and check angles along the way\n    while (anchorDistance < labelLength / 2) {\n        const prev = line[index - 1];\n        const current = line[index];\n        const next = line[index + 1];\n\n        // there isn't enough room for the label before the end of the line\n        if (!next) return false;\n\n        let angleDelta = prev.angleTo(current) - current.angleTo(next);\n        // restrict angle to -pi..pi range\n        angleDelta = Math.abs(((angleDelta + 3 * Math.PI) % (Math.PI * 2)) - Math.PI);\n\n        recentCorners.push({\n            distance: anchorDistance,\n            angleDelta\n        });\n        recentAngleDelta += angleDelta;\n\n        // remove corners that are far enough away from the list of recent anchors\n        while (anchorDistance - recentCorners[0].distance > windowSize) {\n            recentAngleDelta -= recentCorners.shift().angleDelta;\n        }\n\n        // the sum of angles within the window area exceeds the maximum allowed value. check fails.\n        if (recentAngleDelta > maxAngle) return false;\n\n        index++;\n        anchorDistance += current.dist(next);\n    }\n\n    // no part of the line had an angle greater than the maximum allowed. check passes.\n    return true;\n}\n","// @flow\n\nimport { number as interpolate } from '../style-spec/util/interpolate';\n\nimport Anchor from '../symbol/anchor';\nimport checkMaxAngle from './check_max_angle';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {Shaping, PositionedIcon} from './shaping';\n\nexport { getAnchors, getCenterAnchor };\n\nfunction getLineLength(line: Array<Point>): number {\n    let lineLength = 0;\n    for (let k = 0; k < line.length - 1; k++) {\n        lineLength += line[k].dist(line[k + 1]);\n    }\n    return lineLength;\n}\n\nfunction getAngleWindowSize(shapedText: ?Shaping,\n                            glyphSize: number,\n                            boxScale: number): number {\n    return shapedText ?\n        3 / 5 * glyphSize * boxScale :\n        0;\n}\n\nfunction getShapedLabelLength(shapedText: ?Shaping, shapedIcon: ?PositionedIcon): number {\n    return Math.max(\n        shapedText ? shapedText.right - shapedText.left : 0,\n        shapedIcon ? shapedIcon.right - shapedIcon.left : 0);\n}\n\nfunction getCenterAnchor(line: Array<Point>,\n                         maxAngle: number,\n                         shapedText: ?Shaping,\n                         shapedIcon: ?PositionedIcon,\n                         glyphSize: number,\n                         boxScale: number) {\n    const angleWindowSize = getAngleWindowSize(shapedText, glyphSize, boxScale);\n    const labelLength = getShapedLabelLength(shapedText, shapedIcon) * boxScale;\n\n    let prevDistance = 0;\n    const centerDistance = getLineLength(line) / 2;\n\n    for (let i = 0; i < line.length - 1; i++) {\n\n        const a = line[i],\n            b = line[i + 1];\n\n        const segmentDistance = a.dist(b);\n\n        if (prevDistance + segmentDistance > centerDistance) {\n            // The center is on this segment\n            const t = (centerDistance - prevDistance) / segmentDistance,\n                x = interpolate(a.x, b.x, t),\n                y = interpolate(a.y, b.y, t);\n\n            const anchor = new Anchor(x, y, b.angleTo(a), i);\n            anchor._round();\n            if (!angleWindowSize || checkMaxAngle(line, anchor, labelLength, angleWindowSize, maxAngle)) {\n                return anchor;\n            } else {\n                return;\n            }\n        }\n\n        prevDistance += segmentDistance;\n    }\n}\n\nfunction getAnchors(line: Array<Point>,\n                    spacing: number,\n                    maxAngle: number,\n                    shapedText: ?Shaping,\n                    shapedIcon: ?PositionedIcon,\n                    glyphSize: number,\n                    boxScale: number,\n                    overscaling: number,\n                    tileExtent: number) {\n\n    // Resample a line to get anchor points for labels and check that each\n    // potential label passes text-max-angle check and has enough froom to fit\n    // on the line.\n\n    const angleWindowSize = getAngleWindowSize(shapedText, glyphSize, boxScale);\n    const shapedLabelLength = getShapedLabelLength(shapedText, shapedIcon);\n    const labelLength = shapedLabelLength * boxScale;\n\n    // Is the line continued from outside the tile boundary?\n    const isLineContinued = line[0].x === 0 || line[0].x === tileExtent || line[0].y === 0 || line[0].y === tileExtent;\n\n    // Is the label long, relative to the spacing?\n    // If so, adjust the spacing so there is always a minimum space of `spacing / 4` between label edges.\n    if (spacing - labelLength < spacing / 4) {\n        spacing = labelLength + spacing / 4;\n    }\n\n    // Offset the first anchor by:\n    // Either half the label length plus a fixed extra offset if the line is not continued\n    // Or half the spacing if the line is continued.\n\n    // For non-continued lines, add a bit of fixed extra offset to avoid collisions at T intersections.\n    const fixedExtraOffset = glyphSize * 2;\n\n    const offset = !isLineContinued ?\n        ((shapedLabelLength / 2 + fixedExtraOffset) * boxScale * overscaling) % spacing :\n        (spacing / 2 * overscaling) % spacing;\n\n    return resample(line, offset, spacing, angleWindowSize, maxAngle, labelLength, isLineContinued, false, tileExtent);\n}\n\n\nfunction resample(line, offset, spacing, angleWindowSize, maxAngle, labelLength, isLineContinued, placeAtMiddle, tileExtent) {\n\n    const halfLabelLength = labelLength / 2;\n    const lineLength = getLineLength(line);\n\n    let distance = 0,\n        markedDistance = offset - spacing;\n\n    let anchors = [];\n\n    for (let i = 0; i < line.length - 1; i++) {\n\n        const a = line[i],\n            b = line[i + 1];\n\n        const segmentDist = a.dist(b),\n            angle = b.angleTo(a);\n\n        while (markedDistance + spacing < distance + segmentDist) {\n            markedDistance += spacing;\n\n            const t = (markedDistance - distance) / segmentDist,\n                x = interpolate(a.x, b.x, t),\n                y = interpolate(a.y, b.y, t);\n\n            // Check that the point is within the tile boundaries and that\n            // the label would fit before the beginning and end of the line\n            // if placed at this point.\n            if (x >= 0 && x < tileExtent && y >= 0 && y < tileExtent &&\n                    markedDistance - halfLabelLength >= 0 &&\n                    markedDistance + halfLabelLength <= lineLength) {\n                const anchor = new Anchor(x, y, angle, i);\n                anchor._round();\n\n                if (!angleWindowSize || checkMaxAngle(line, anchor, labelLength, angleWindowSize, maxAngle)) {\n                    anchors.push(anchor);\n                }\n            }\n        }\n\n        distance += segmentDist;\n    }\n\n    if (!placeAtMiddle && !anchors.length && !isLineContinued) {\n        // The first attempt at finding anchors at which labels can be placed failed.\n        // Try again, but this time just try placing one anchor at the middle of the line.\n        // This has the most effect for short lines in overscaled tiles, since the\n        // initial offset used in overscaled tiles is calculated to align labels with positions in\n        // parent tiles instead of placing the label as close to the beginning as possible.\n        anchors = resample(line, distance / 2, spacing, angleWindowSize, maxAngle, labelLength, isLineContinued, true, tileExtent);\n    }\n\n    return anchors;\n}\n","// @flow\n\nimport type {CollisionBoxArray} from '../data/array_types';\nimport Point from '@mapbox/point-geometry';\nimport type Anchor from './anchor';\n\n/**\n * A CollisionFeature represents the area of the tile covered by a single label.\n * It is used with CollisionIndex to check if the label overlaps with any\n * previous labels. A CollisionFeature is mostly just a set of CollisionBox\n * objects.\n *\n * @private\n */\nclass CollisionFeature {\n    boxStartIndex: number;\n    boxEndIndex: number;\n\n    /**\n     * Create a CollisionFeature, adding its collision box data to the given collisionBoxArray in the process.\n     *\n     * @param line The geometry the label is placed on.\n     * @param anchor The point along the line around which the label is anchored.\n     * @param shaped The text or icon shaping results.\n     * @param boxScale A magic number used to convert from glyph metrics units to geometry units.\n     * @param padding The amount of padding to add around the label edges.\n     * @param alignLine Whether the label is aligned with the line or the viewport.\n     */\n    constructor(collisionBoxArray: CollisionBoxArray,\n                line: Array<Point>,\n                anchor: Anchor,\n                featureIndex: number,\n                sourceLayerIndex: number,\n                bucketIndex: number,\n                shaped: Object,\n                boxScale: number,\n                padding: number,\n                alignLine: boolean,\n                overscaling: number,\n                rotate: number) {\n        let y1 = shaped.top * boxScale - padding;\n        let y2 = shaped.bottom * boxScale + padding;\n        let x1 = shaped.left * boxScale - padding;\n        let x2 = shaped.right * boxScale + padding;\n\n        this.boxStartIndex = collisionBoxArray.length;\n\n        if (alignLine) {\n\n            let height = y2 - y1;\n            const length = x2 - x1;\n\n            if (height > 0) {\n                // set minimum box height to avoid very many small labels\n                height = Math.max(10 * boxScale, height);\n\n                this._addLineCollisionCircles(collisionBoxArray, line, anchor, (anchor.segment: any), length, height, featureIndex, sourceLayerIndex, bucketIndex, overscaling);\n            }\n\n        } else {\n            if (rotate) {\n                // Account for *-rotate in point collision boxes\n                // See https://github.com/mapbox/mapbox-gl-js/issues/6075\n                // Doesn't account for icon-text-fit\n\n                const tl = new Point(x1, y1);\n                const tr = new Point(x2, y1);\n                const bl = new Point(x1, y2);\n                const br = new Point(x2, y2);\n\n                const rotateRadians = rotate * Math.PI / 180;\n\n                tl._rotate(rotateRadians);\n                tr._rotate(rotateRadians);\n                bl._rotate(rotateRadians);\n                br._rotate(rotateRadians);\n\n                // Collision features require an \"on-axis\" geometry,\n                // so take the envelope of the rotated geometry\n                // (may be quite large for wide labels rotated 45 degrees)\n                x1 = Math.min(tl.x, tr.x, bl.x, br.x);\n                x2 = Math.max(tl.x, tr.x, bl.x, br.x);\n                y1 = Math.min(tl.y, tr.y, bl.y, br.y);\n                y2 = Math.max(tl.y, tr.y, bl.y, br.y);\n            }\n            collisionBoxArray.emplaceBack(anchor.x, anchor.y, x1, y1, x2, y2, featureIndex, sourceLayerIndex, bucketIndex,\n                0, 0);\n        }\n\n        this.boxEndIndex = collisionBoxArray.length;\n    }\n\n    /**\n     * Create a set of CollisionBox objects for a line.\n     *\n     * @param labelLength The length of the label in geometry units.\n     * @param anchor The point along the line around which the label is anchored.\n     * @param boxSize The size of the collision boxes that will be created.\n     * @private\n     */\n    _addLineCollisionCircles(collisionBoxArray: CollisionBoxArray,\n                           line: Array<Point>,\n                           anchor: Anchor,\n                           segment: number,\n                           labelLength: number,\n                           boxSize: number,\n                           featureIndex: number,\n                           sourceLayerIndex: number,\n                           bucketIndex: number,\n                           overscaling: number) {\n        const step = boxSize / 2;\n        const nBoxes = Math.floor(labelLength / step) || 1;\n        // We calculate line collision circles out to 300% of what would normally be our\n        // max size, to allow collision detection to work on labels that expand as\n        // they move into the distance\n        // Vertically oriented labels in the distant field can extend past this padding\n        // This is a noticeable problem in overscaled tiles where the pitch 0-based\n        // symbol spacing will put labels very close together in a pitched map.\n        // To reduce the cost of adding extra collision circles, we slowly increase\n        // them for overscaled tiles.\n        const overscalingPaddingFactor = 1 + .4 * Math.log(overscaling) / Math.LN2;\n        const nPitchPaddingBoxes = Math.floor(nBoxes * overscalingPaddingFactor / 2);\n\n        // offset the center of the first box by half a box so that the edge of the\n        // box is at the edge of the label.\n        const firstBoxOffset = -boxSize / 2;\n\n        let p = anchor;\n        let index = segment + 1;\n        let anchorDistance = firstBoxOffset;\n        const labelStartDistance = -labelLength / 2;\n        const paddingStartDistance = labelStartDistance - labelLength / 4;\n        // move backwards along the line to the first segment the label appears on\n        do {\n            index--;\n\n            if (index < 0) {\n                if (anchorDistance > labelStartDistance) {\n                    // there isn't enough room for the label after the beginning of the line\n                    // checkMaxAngle should have already caught this\n                    return;\n                } else {\n                    // The line doesn't extend far enough back for all of our padding,\n                    // but we got far enough to show the label under most conditions.\n                    index = 0;\n                    break;\n                }\n            } else {\n                anchorDistance -= line[index].dist(p);\n                p = line[index];\n            }\n        } while (anchorDistance > paddingStartDistance);\n\n        let segmentLength = line[index].dist(line[index + 1]);\n\n        for (let i = -nPitchPaddingBoxes; i < nBoxes + nPitchPaddingBoxes; i++) {\n\n            // the distance the box will be from the anchor\n            const boxOffset = i * step;\n            let boxDistanceToAnchor = labelStartDistance + boxOffset;\n\n            // make the distance between pitch padding boxes bigger\n            if (boxOffset < 0) boxDistanceToAnchor += boxOffset;\n            if (boxOffset > labelLength) boxDistanceToAnchor += boxOffset - labelLength;\n\n            if (boxDistanceToAnchor < anchorDistance) {\n                // The line doesn't extend far enough back for this box, skip it\n                // (This could allow for line collisions on distant tiles)\n                continue;\n            }\n\n            // the box is not on the current segment. Move to the next segment.\n            while (anchorDistance + segmentLength < boxDistanceToAnchor) {\n                anchorDistance += segmentLength;\n                index++;\n\n                // There isn't enough room before the end of the line.\n                if (index + 1 >= line.length) {\n                    return;\n                }\n\n                segmentLength = line[index].dist(line[index + 1]);\n            }\n\n            // the distance the box will be from the beginning of the segment\n            const segmentBoxDistance = boxDistanceToAnchor - anchorDistance;\n\n            const p0 = line[index];\n            const p1 = line[index + 1];\n            const boxAnchorPoint = p1.sub(p0)._unit()._mult(segmentBoxDistance)._add(p0)._round();\n\n            // If the box is within boxSize of the anchor, force the box to be used\n            // (so even 0-width labels use at least one box)\n            // Otherwise, the .8 multiplication gives us a little bit of conservative\n            // padding in choosing which boxes to use (see CollisionIndex#placedCollisionCircles)\n            const paddedAnchorDistance = Math.abs(boxDistanceToAnchor - firstBoxOffset) < step ?\n                0 :\n                (boxDistanceToAnchor - firstBoxOffset) * 0.8;\n\n            collisionBoxArray.emplaceBack(boxAnchorPoint.x, boxAnchorPoint.y,\n                -boxSize / 2, -boxSize / 2, boxSize / 2, boxSize / 2,\n                featureIndex, sourceLayerIndex, bucketIndex,\n                boxSize / 2, paddedAnchorDistance);\n        }\n    }\n}\n\nexport default CollisionFeature;\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// @flow\n\nimport Queue from 'tinyqueue';\n\nimport Point from '@mapbox/point-geometry';\nimport { distToSegmentSquared } from './intersection_tests';\n\n/**\n * Finds an approximation of a polygon's Pole Of Inaccessibiliy https://en.wikipedia.org/wiki/Pole_of_inaccessibility\n * This is a copy of http://github.com/mapbox/polylabel adapted to use Points\n *\n * @param polygonRings first item in array is the outer ring followed optionally by the list of holes, should be an element of the result of util/classify_rings\n * @param precision Specified in input coordinate units. If 0 returns after first run, if > 0 repeatedly narrows the search space until the radius of the area searched for the best pole is less than precision\n * @param debug Print some statistics to the console during execution\n * @returns Pole of Inaccessibiliy.\n * @private\n */\nexport default function (polygonRings: Array<Array<Point>>, precision?: number = 1, debug?: boolean = false): Point {\n    // find the bounding box of the outer ring\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    const outerRing = polygonRings[0];\n    for (let i = 0; i < outerRing.length; i++) {\n        const p = outerRing[i];\n        if (!i || p.x < minX) minX = p.x;\n        if (!i || p.y < minY) minY = p.y;\n        if (!i || p.x > maxX) maxX = p.x;\n        if (!i || p.y > maxY) maxY = p.y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.min(width, height);\n    let h = cellSize / 2;\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], compareMax);\n\n    if (cellSize === 0) return new Point(minX, minY);\n\n    // cover polygon with initial cells\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygonRings));\n        }\n    }\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygonRings);\n    let numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d || !bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.p.x - h, cell.p.y - h, h, polygonRings));\n        cellQueue.push(new Cell(cell.p.x + h, cell.p.y - h, h, polygonRings));\n        cellQueue.push(new Cell(cell.p.x - h, cell.p.y + h, h, polygonRings));\n        cellQueue.push(new Cell(cell.p.x + h, cell.p.y + h, h, polygonRings));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}`);\n        console.log(`best distance: ${bestCell.d}`);\n    }\n\n    return bestCell.p;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.p = new Point(x, y);\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(this.p, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(p, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (let k = 0; k < polygon.length; k++) {\n        const ring = polygon[k];\n\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a.y > p.y !== b.y > p.y) &&\n                (p.x < (b.x - a.x) * (p.y - a.y) / (b.y - a.y) + a.x)) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, distToSegmentSquared(p, a, b));\n        }\n    }\n\n    return (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a.x * b.y - b.x * a.y;\n        x += (a.x + b.x) * f;\n        y += (a.y + b.y) * f;\n        area += f * 3;\n    }\n    return new Cell(x / area, y / area, 0, polygon);\n}\n","/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nif(typeof module !== \"undefined\") {\n  module.exports = murmurhash3_32_gc\n}","/**\n * JS Implementation of MurmurHash2\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\n\nfunction murmurhash2_32_gc(str, seed) {\n  var\n    l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n  \n  while (l >= 4) {\n  \tk = \n  \t  ((str.charCodeAt(i) & 0xff)) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 8) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 16) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 24);\n    \n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    k ^= k >>> 24;\n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n\th = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n    l -= 4;\n    ++i;\n  }\n  \n  switch (l) {\n  case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n  case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n  case 1: h ^= (str.charCodeAt(i) & 0xff);\n          h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  }\n\n  h ^= h >>> 13;\n  h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\nif(typeof module !== undefined) {\n  module.exports = murmurhash2_32_gc\n}\n","var murmur3 = require(\"./murmurhash3_gc.js\")\nvar murmur2 = require(\"./murmurhash2_gc.js\")\n\nmodule.exports = murmur3\nmodule.exports.murmur3 = murmur3\nmodule.exports.murmur2 = murmur2\n","// @flow\n\nimport Anchor from './anchor';\n\nimport { getAnchors, getCenterAnchor } from './get_anchors';\nimport clipLine from './clip_line';\nimport { shapeText, shapeIcon, WritingMode } from './shaping';\nimport { getGlyphQuads, getIconQuads } from './quads';\nimport CollisionFeature from './collision_feature';\nimport { warnOnce } from '../util/util';\nimport {\n    allowsVerticalWritingMode,\n    allowsLetterSpacing\n} from '../util/script_detection';\nimport findPoleOfInaccessibility from '../util/find_pole_of_inaccessibility';\nimport classifyRings from '../util/classify_rings';\nimport EXTENT from '../data/extent';\nimport SymbolBucket from '../data/bucket/symbol_bucket';\nimport EvaluationParameters from '../style/evaluation_parameters';\nimport {SIZE_PACK_FACTOR} from './symbol_size';\n\nimport type {Shaping, PositionedIcon} from './shaping';\nimport type {CollisionBoxArray} from '../data/array_types';\nimport type {SymbolFeature} from '../data/bucket/symbol_bucket';\nimport type {StyleImage} from '../style/style_image';\nimport type {StyleGlyph} from '../style/style_glyph';\nimport type SymbolStyleLayer from '../style/style_layer/symbol_style_layer';\nimport type {ImagePosition} from '../render/image_atlas';\nimport type {GlyphPosition} from '../render/glyph_atlas';\nimport type {PossiblyEvaluatedPropertyValue} from '../style/properties';\n\nimport Point from '@mapbox/point-geometry';\nimport murmur3 from 'murmurhash-js';\n\n// The symbol layout process needs `text-size` evaluated at up to five different zoom levels, and\n// `icon-size` at up to three:\n//\n//   1. `text-size` at the zoom level of the bucket. Used to calculate a per-feature size for source `text-size`\n//       expressions, and to calculate the box dimensions for icon-text-fit.\n//   2. `icon-size` at the zoom level of the bucket. Used to calculate a per-feature size for source `icon-size`\n//       expressions.\n//   3. `text-size` and `icon-size` at the zoom level of the bucket, plus one. Used to calculate collision boxes.\n//   4. `text-size` at zoom level 18. Used for something line-symbol-placement-related.\n//   5.  For composite `*-size` expressions: two zoom levels of curve stops that \"cover\" the zoom level of the\n//       bucket. These go into a vertex buffer and are used by the shader to interpolate the size at render time.\n//\n// (1) and (2) are stored in `bucket.layers[0].layout`. The remainder are below.\n//\ntype Sizes = {\n    layoutTextSize: PossiblyEvaluatedPropertyValue<number>, // (3)\n    layoutIconSize: PossiblyEvaluatedPropertyValue<number>, // (3)\n    textMaxSize: PossiblyEvaluatedPropertyValue<number>,    // (4)\n    compositeTextSizes: [PossiblyEvaluatedPropertyValue<number>, PossiblyEvaluatedPropertyValue<number>], // (5)\n    compositeIconSizes: [PossiblyEvaluatedPropertyValue<number>, PossiblyEvaluatedPropertyValue<number>], // (5)\n};\n\nexport function performSymbolLayout(bucket: SymbolBucket,\n                             glyphMap: {[string]: {[number]: ?StyleGlyph}},\n                             glyphPositions: {[string]: {[number]: GlyphPosition}},\n                             imageMap: {[string]: StyleImage},\n                             imagePositions: {[string]: ImagePosition},\n                             showCollisionBoxes: boolean) {\n    bucket.createArrays();\n\n    const tileSize = 512 * bucket.overscaling;\n    bucket.tilePixelRatio = EXTENT / tileSize;\n    bucket.compareText = {};\n    bucket.iconsNeedLinear = false;\n\n    const layout = bucket.layers[0].layout;\n    const unevaluatedLayoutValues = bucket.layers[0]._unevaluatedLayout._values;\n\n    const sizes = {};\n\n    if (bucket.textSizeData.functionType === 'composite') {\n        const {min, max} = bucket.textSizeData.zoomRange;\n        sizes.compositeTextSizes = [\n            unevaluatedLayoutValues['text-size'].possiblyEvaluate(new EvaluationParameters(min)),\n            unevaluatedLayoutValues['text-size'].possiblyEvaluate(new EvaluationParameters(max))\n        ];\n    }\n\n    if (bucket.iconSizeData.functionType === 'composite') {\n        const {min, max} = bucket.iconSizeData.zoomRange;\n        sizes.compositeIconSizes = [\n            unevaluatedLayoutValues['icon-size'].possiblyEvaluate(new EvaluationParameters(min)),\n            unevaluatedLayoutValues['icon-size'].possiblyEvaluate(new EvaluationParameters(max))\n        ];\n    }\n\n    sizes.layoutTextSize = unevaluatedLayoutValues['text-size'].possiblyEvaluate(new EvaluationParameters(bucket.zoom + 1));\n    sizes.layoutIconSize = unevaluatedLayoutValues['icon-size'].possiblyEvaluate(new EvaluationParameters(bucket.zoom + 1));\n    sizes.textMaxSize = unevaluatedLayoutValues['text-size'].possiblyEvaluate(new EvaluationParameters(18));\n\n    const oneEm = 24;\n    const lineHeight = layout.get('text-line-height') * oneEm;\n    const textAlongLine = layout.get('text-rotation-alignment') === 'map' && layout.get('symbol-placement') !== 'point';\n    const keepUpright = layout.get('text-keep-upright');\n\n\n    for (const feature of bucket.features) {\n        const fontstack = layout.get('text-font').evaluate(feature, {}).join(',');\n        const glyphPositionMap = glyphPositions;\n\n        const shapedTextOrientations = {};\n        const text = feature.text;\n        if (text) {\n            const unformattedText = text.toString();\n            const textOffset: [number, number] = (layout.get('text-offset').evaluate(feature, {}).map((t) => t * oneEm): any);\n            const spacing = layout.get('text-letter-spacing').evaluate(feature, {}) * oneEm;\n            const spacingIfAllowed = allowsLetterSpacing(unformattedText) ? spacing : 0;\n            const textAnchor = layout.get('text-anchor').evaluate(feature, {});\n            const textJustify = layout.get('text-justify').evaluate(feature, {});\n            const maxWidth = layout.get('symbol-placement') === 'point' ?\n                layout.get('text-max-width').evaluate(feature, {}) * oneEm :\n                0;\n\n            shapedTextOrientations.horizontal = shapeText(text, glyphMap, fontstack, maxWidth, lineHeight, textAnchor, textJustify, spacingIfAllowed, textOffset, oneEm, WritingMode.horizontal);\n            if (allowsVerticalWritingMode(unformattedText) && textAlongLine && keepUpright) {\n                shapedTextOrientations.vertical = shapeText(text, glyphMap, fontstack, maxWidth, lineHeight, textAnchor, textJustify, spacingIfAllowed, textOffset, oneEm, WritingMode.vertical);\n            }\n        }\n\n        let shapedIcon;\n        if (feature.icon) {\n            const image = imageMap[feature.icon];\n            if (image) {\n                shapedIcon = shapeIcon(\n                    imagePositions[feature.icon],\n                    layout.get('icon-offset').evaluate(feature, {}),\n                    layout.get('icon-anchor').evaluate(feature, {}));\n                if (bucket.sdfIcons === undefined) {\n                    bucket.sdfIcons = image.sdf;\n                } else if (bucket.sdfIcons !== image.sdf) {\n                    warnOnce('Style sheet warning: Cannot mix SDF and non-SDF icons in one buffer');\n                }\n                if (image.pixelRatio !== bucket.pixelRatio) {\n                    bucket.iconsNeedLinear = true;\n                } else if (layout.get('icon-rotate').constantOr(1) !== 0) {\n                    bucket.iconsNeedLinear = true;\n                }\n            }\n        }\n\n        if (shapedTextOrientations.horizontal || shapedIcon) {\n            addFeature(bucket, feature, shapedTextOrientations, shapedIcon, glyphPositionMap, sizes);\n        }\n    }\n\n    if (showCollisionBoxes) {\n        bucket.generateCollisionDebugBuffers();\n    }\n}\n\n\n/**\n * Given a feature and its shaped text and icon data, add a 'symbol\n * instance' for each _possible_ placement of the symbol feature.\n * (At render timePlaceSymbols#place() selects which of these instances to\n * show or hide based on collisions with symbols in other layers.)\n * @private\n */\nfunction addFeature(bucket: SymbolBucket,\n                    feature: SymbolFeature,\n                    shapedTextOrientations: any,\n                    shapedIcon: PositionedIcon | void,\n                    glyphPositionMap: {[string]: {[number]: GlyphPosition}},\n                    sizes: Sizes) {\n    const layoutTextSize = sizes.layoutTextSize.evaluate(feature, {});\n    const layoutIconSize = sizes.layoutIconSize.evaluate(feature, {});\n\n    // To reduce the number of labels that jump around when zooming we need\n    // to use a text-size value that is the same for all zoom levels.\n    // bucket calculates text-size at a high zoom level so that all tiles can\n    // use the same value when calculating anchor positions.\n    let textMaxSize = sizes.textMaxSize.evaluate(feature, {});\n    if (textMaxSize === undefined) {\n        textMaxSize = layoutTextSize;\n    }\n\n    const layout = bucket.layers[0].layout;\n    const textOffset = layout.get('text-offset').evaluate(feature, {});\n    const iconOffset = layout.get('icon-offset').evaluate(feature, {});\n\n    const glyphSize = 24,\n        fontScale = layoutTextSize / glyphSize,\n        textBoxScale = bucket.tilePixelRatio * fontScale,\n        textMaxBoxScale = bucket.tilePixelRatio * textMaxSize / glyphSize,\n        iconBoxScale = bucket.tilePixelRatio * layoutIconSize,\n        symbolMinDistance = bucket.tilePixelRatio * layout.get('symbol-spacing'),\n        textPadding = layout.get('text-padding') * bucket.tilePixelRatio,\n        iconPadding = layout.get('icon-padding') * bucket.tilePixelRatio,\n        textMaxAngle = layout.get('text-max-angle') / 180 * Math.PI,\n        textAlongLine = layout.get('text-rotation-alignment') === 'map' && layout.get('symbol-placement') !== 'point',\n        iconAlongLine = layout.get('icon-rotation-alignment') === 'map' && layout.get('symbol-placement') !== 'point',\n        symbolPlacement = layout.get('symbol-placement'),\n        textRepeatDistance = symbolMinDistance / 2;\n\n    const addSymbolAtAnchor = (line, anchor) => {\n        if (anchor.x < 0 || anchor.x >= EXTENT || anchor.y < 0 || anchor.y >= EXTENT) {\n            // Symbol layers are drawn across tile boundaries, We filter out symbols\n            // outside our tile boundaries (which may be included in vector tile buffers)\n            // to prevent double-drawing symbols.\n            return;\n        }\n\n        addSymbol(bucket, anchor, line, shapedTextOrientations, shapedIcon, bucket.layers[0],\n            bucket.collisionBoxArray, feature.index, feature.sourceLayerIndex, bucket.index,\n            textBoxScale, textPadding, textAlongLine, textOffset,\n            iconBoxScale, iconPadding, iconAlongLine, iconOffset,\n            feature, glyphPositionMap, sizes);\n    };\n\n    if (symbolPlacement === 'line') {\n        for (const line of clipLine(feature.geometry, 0, 0, EXTENT, EXTENT)) {\n            const anchors = getAnchors(\n                line,\n                symbolMinDistance,\n                textMaxAngle,\n                shapedTextOrientations.vertical || shapedTextOrientations.horizontal,\n                shapedIcon,\n                glyphSize,\n                textMaxBoxScale,\n                bucket.overscaling,\n                EXTENT\n            );\n            for (const anchor of anchors) {\n                const shapedText = shapedTextOrientations.horizontal;\n                if (!shapedText || !anchorIsTooClose(bucket, shapedText.text, textRepeatDistance, anchor)) {\n                    addSymbolAtAnchor(line, anchor);\n                }\n            }\n        }\n    } else if (symbolPlacement === 'line-center') {\n        // No clipping, multiple lines per feature are allowed\n        // \"lines\" with only one point are ignored as in clipLines\n        for (const line of feature.geometry) {\n            if (line.length > 1) {\n                const anchor = getCenterAnchor(\n                    line,\n                    textMaxAngle,\n                    shapedTextOrientations.vertical || shapedTextOrientations.horizontal,\n                    shapedIcon,\n                    glyphSize,\n                    textMaxBoxScale);\n                if (anchor) {\n                    addSymbolAtAnchor(line, anchor);\n                }\n            }\n        }\n    } else if (feature.type === 'Polygon') {\n        for (const polygon of classifyRings(feature.geometry, 0)) {\n            // 16 here represents 2 pixels\n            const poi = findPoleOfInaccessibility(polygon, 16);\n            addSymbolAtAnchor(polygon[0], new Anchor(poi.x, poi.y, 0));\n        }\n    } else if (feature.type === 'LineString') {\n        // https://github.com/mapbox/mapbox-gl-js/issues/3808\n        for (const line of feature.geometry) {\n            addSymbolAtAnchor(line, new Anchor(line[0].x, line[0].y, 0));\n        }\n    } else if (feature.type === 'Point') {\n        for (const points of feature.geometry) {\n            for (const point of points) {\n                addSymbolAtAnchor([point], new Anchor(point.x, point.y, 0));\n            }\n        }\n    }\n}\n\nconst MAX_PACKED_SIZE = 65535;\n\nfunction addTextVertices(bucket: SymbolBucket,\n                         anchor: Point,\n                         shapedText: Shaping,\n                         layer: SymbolStyleLayer,\n                         textAlongLine: boolean,\n                         feature: SymbolFeature,\n                         textOffset: [number, number],\n                         lineArray: {lineStartIndex: number, lineLength: number},\n                         writingMode: number,\n                         placedTextSymbolIndices: Array<number>,\n                         glyphPositionMap: {[string]: {[number]: GlyphPosition}},\n                         sizes: Sizes) {\n    const glyphQuads = getGlyphQuads(anchor, shapedText,\n                            layer, textAlongLine, feature, glyphPositionMap);\n\n    const sizeData = bucket.textSizeData;\n    let textSizeData = null;\n\n    if (sizeData.functionType === 'source') {\n        textSizeData = [\n            SIZE_PACK_FACTOR * layer.layout.get('text-size').evaluate(feature, {})\n        ];\n        if (textSizeData[0] > MAX_PACKED_SIZE) {\n            warnOnce(`${bucket.layerIds[0]}: Value for \"text-size\" is >= 256. Reduce your \"text-size\".`);\n        }\n    } else if (sizeData.functionType === 'composite') {\n        textSizeData = [\n            SIZE_PACK_FACTOR * sizes.compositeTextSizes[0].evaluate(feature, {}),\n            SIZE_PACK_FACTOR * sizes.compositeTextSizes[1].evaluate(feature, {})\n        ];\n        if (textSizeData[0] > MAX_PACKED_SIZE || textSizeData[1] > MAX_PACKED_SIZE) {\n            warnOnce(`${bucket.layerIds[0]}: Value for \"text-size\" is >= 256. Reduce your \"text-size\".`);\n        }\n    }\n\n    bucket.addSymbols(\n        bucket.text,\n        glyphQuads,\n        textSizeData,\n        textOffset,\n        textAlongLine,\n        feature,\n        writingMode,\n        anchor,\n        lineArray.lineStartIndex,\n        lineArray.lineLength);\n\n    // The placedSymbolArray is used at render time in drawTileSymbols\n    // These indices allow access to the array at collision detection time\n    placedTextSymbolIndices.push(bucket.text.placedSymbolArray.length - 1);\n\n    return glyphQuads.length * 4;\n}\n\n\n/**\n * Add a single label & icon placement.\n *\n * @private\n */\nfunction addSymbol(bucket: SymbolBucket,\n                   anchor: Anchor,\n                   line: Array<Point>,\n                   shapedTextOrientations: any,\n                   shapedIcon: PositionedIcon | void,\n                   layer: SymbolStyleLayer,\n                   collisionBoxArray: CollisionBoxArray,\n                   featureIndex: number,\n                   sourceLayerIndex: number,\n                   bucketIndex: number,\n                   textBoxScale: number,\n                   textPadding: number,\n                   textAlongLine: boolean,\n                   textOffset: [number, number],\n                   iconBoxScale: number,\n                   iconPadding: number,\n                   iconAlongLine: boolean,\n                   iconOffset: [number, number],\n                   feature: SymbolFeature,\n                   glyphPositionMap: {[string]: {[number]: GlyphPosition}},\n                   sizes: Sizes) {\n    const lineArray = bucket.addToLineVertexArray(anchor, line);\n\n    let textCollisionFeature, iconCollisionFeature;\n\n    let numIconVertices = 0;\n    let numGlyphVertices = 0;\n    let numVerticalGlyphVertices = 0;\n    const key = murmur3(shapedTextOrientations.horizontal ? shapedTextOrientations.horizontal.text : '');\n    const placedTextSymbolIndices = [];\n    if (shapedTextOrientations.horizontal) {\n        // As a collision approximation, we can use either the vertical or the horizontal version of the feature\n        // We're counting on the two versions having similar dimensions\n        const textRotate = layer.layout.get('text-rotate').evaluate(feature, {});\n        textCollisionFeature = new CollisionFeature(collisionBoxArray, line, anchor, featureIndex, sourceLayerIndex, bucketIndex, shapedTextOrientations.horizontal, textBoxScale, textPadding, textAlongLine, bucket.overscaling, textRotate);\n        numGlyphVertices += addTextVertices(bucket, anchor, shapedTextOrientations.horizontal, layer, textAlongLine, feature, textOffset, lineArray, shapedTextOrientations.vertical ? WritingMode.horizontal : WritingMode.horizontalOnly, placedTextSymbolIndices, glyphPositionMap, sizes);\n\n        if (shapedTextOrientations.vertical) {\n            numVerticalGlyphVertices += addTextVertices(bucket, anchor, shapedTextOrientations.vertical, layer, textAlongLine, feature, textOffset, lineArray, WritingMode.vertical, placedTextSymbolIndices, glyphPositionMap, sizes);\n        }\n    }\n\n    const textBoxStartIndex = textCollisionFeature ? textCollisionFeature.boxStartIndex : bucket.collisionBoxArray.length;\n    const textBoxEndIndex = textCollisionFeature ? textCollisionFeature.boxEndIndex : bucket.collisionBoxArray.length;\n\n    if (shapedIcon) {\n        const iconQuads = getIconQuads(anchor, shapedIcon, layer,\n                            iconAlongLine, shapedTextOrientations.horizontal,\n                            feature);\n        const iconRotate = layer.layout.get('icon-rotate').evaluate(feature, {});\n        iconCollisionFeature = new CollisionFeature(collisionBoxArray, line, anchor, featureIndex, sourceLayerIndex, bucketIndex, shapedIcon, iconBoxScale, iconPadding, /*align boxes to line*/false, bucket.overscaling, iconRotate);\n\n        numIconVertices = iconQuads.length * 4;\n\n        const sizeData = bucket.iconSizeData;\n        let iconSizeData = null;\n\n        if (sizeData.functionType === 'source') {\n            iconSizeData = [\n                SIZE_PACK_FACTOR * layer.layout.get('icon-size').evaluate(feature, {})\n            ];\n            if (iconSizeData[0] > MAX_PACKED_SIZE) {\n                warnOnce(`${bucket.layerIds[0]}: Value for \"icon-size\" is >= 256. Reduce your \"icon-size\".`);\n            }\n        } else if (sizeData.functionType === 'composite') {\n            iconSizeData = [\n                SIZE_PACK_FACTOR * sizes.compositeIconSizes[0].evaluate(feature, {}),\n                SIZE_PACK_FACTOR * sizes.compositeIconSizes[1].evaluate(feature, {})\n            ];\n            if (iconSizeData[0] > MAX_PACKED_SIZE || iconSizeData[1] > MAX_PACKED_SIZE) {\n                warnOnce(`${bucket.layerIds[0]}: Value for \"icon-size\" is >= 256. Reduce your \"icon-size\".`);\n            }\n        }\n\n        bucket.addSymbols(\n            bucket.icon,\n            iconQuads,\n            iconSizeData,\n            iconOffset,\n            iconAlongLine,\n            feature,\n            false,\n            anchor,\n            lineArray.lineStartIndex,\n            lineArray.lineLength);\n    }\n\n    const iconBoxStartIndex = iconCollisionFeature ? iconCollisionFeature.boxStartIndex : bucket.collisionBoxArray.length;\n    const iconBoxEndIndex = iconCollisionFeature ? iconCollisionFeature.boxEndIndex : bucket.collisionBoxArray.length;\n\n    if (bucket.glyphOffsetArray.length >= SymbolBucket.MAX_GLYPHS) warnOnce(\n        \"Too many glyphs being rendered in a tile. See https://github.com/mapbox/mapbox-gl-js/issues/2907\"\n    );\n\n    bucket.symbolInstances.emplaceBack(\n        anchor.x,\n        anchor.y,\n        placedTextSymbolIndices.length > 0 ? placedTextSymbolIndices[0] : -1,\n        placedTextSymbolIndices.length > 1 ? placedTextSymbolIndices[1] : -1,\n        key,\n        textBoxStartIndex,\n        textBoxEndIndex,\n        iconBoxStartIndex,\n        iconBoxEndIndex,\n        featureIndex,\n        numGlyphVertices,\n        numVerticalGlyphVertices,\n        numIconVertices,\n        0);\n}\n\nfunction anchorIsTooClose(bucket: any, text: string, repeatDistance: number, anchor: Point) {\n    const compareText = bucket.compareText;\n    if (!(text in compareText)) {\n        compareText[text] = [];\n    } else {\n        const otherAnchors = compareText[text];\n        for (let k = otherAnchors.length - 1; k >= 0; k--) {\n            if (anchor.dist(otherAnchors[k]) < repeatDistance) {\n                // If it's within repeatDistance of one anchor, stop looking\n                return true;\n            }\n        }\n    }\n    // If anchor is not within repeatDistance of any other anchor, add to array\n    compareText[text].push(anchor);\n    return false;\n}\n","// @flow\n\nimport Point from '@mapbox/point-geometry';\n\nimport { GLYPH_PBF_BORDER } from '../style/parse_glyph_pbf';\n\nimport type Anchor from './anchor';\nimport type {PositionedIcon, Shaping} from './shaping';\nimport type SymbolStyleLayer from '../style/style_layer/symbol_style_layer';\nimport type {Feature} from '../style-spec/expression';\nimport type {GlyphPosition} from '../render/glyph_atlas';\n\n/**\n * A textured quad for rendering a single icon or glyph.\n *\n * The zoom range the glyph can be shown is defined by minScale and maxScale.\n *\n * @param tl The offset of the top left corner from the anchor.\n * @param tr The offset of the top right corner from the anchor.\n * @param bl The offset of the bottom left corner from the anchor.\n * @param br The offset of the bottom right corner from the anchor.\n * @param tex The texture coordinates.\n *\n * @private\n */\nexport type SymbolQuad = {\n    tl: Point,\n    tr: Point,\n    bl: Point,\n    br: Point,\n    tex: {\n        x: number,\n        y: number,\n        w: number,\n        h: number\n    },\n    writingMode: any | void,\n    glyphOffset: [number, number]\n};\n\n/**\n * Create the quads used for rendering an icon.\n * @private\n */\nexport function getIconQuads(anchor: Anchor,\n                      shapedIcon: PositionedIcon,\n                      layer: SymbolStyleLayer,\n                      alongLine: boolean,\n                      shapedText: Shaping,\n                      feature: Feature): Array<SymbolQuad> {\n    const image = shapedIcon.image;\n    const layout = layer.layout;\n\n    // If you have a 10px icon that isn't perfectly aligned to the pixel grid it will cover 11 actual\n    // pixels. The quad needs to be padded to account for this, otherwise they'll look slightly clipped\n    // on one edge in some cases.\n    const border = 1;\n\n    const top = shapedIcon.top - border / image.pixelRatio;\n    const left = shapedIcon.left - border / image.pixelRatio;\n    const bottom = shapedIcon.bottom + border / image.pixelRatio;\n    const right = shapedIcon.right + border / image.pixelRatio;\n    let tl, tr, br, bl;\n\n    // text-fit mode\n    if (layout.get('icon-text-fit') !== 'none' && shapedText) {\n        const iconWidth = (right - left),\n            iconHeight = (bottom - top),\n            size = layout.get('text-size').evaluate(feature, {}) / 24,\n            textLeft = shapedText.left * size,\n            textRight = shapedText.right * size,\n            textTop = shapedText.top * size,\n            textBottom = shapedText.bottom * size,\n            textWidth = textRight - textLeft,\n            textHeight = textBottom - textTop,\n            padT = layout.get('icon-text-fit-padding')[0],\n            padR = layout.get('icon-text-fit-padding')[1],\n            padB = layout.get('icon-text-fit-padding')[2],\n            padL = layout.get('icon-text-fit-padding')[3],\n            offsetY = layout.get('icon-text-fit') === 'width' ? (textHeight - iconHeight) * 0.5 : 0,\n            offsetX = layout.get('icon-text-fit') === 'height' ? (textWidth - iconWidth) * 0.5 : 0,\n            width = layout.get('icon-text-fit') === 'width' || layout.get('icon-text-fit') === 'both' ? textWidth : iconWidth,\n            height = layout.get('icon-text-fit') === 'height' || layout.get('icon-text-fit') === 'both' ? textHeight : iconHeight;\n        tl = new Point(textLeft + offsetX - padL,         textTop + offsetY - padT);\n        tr = new Point(textLeft + offsetX + padR + width, textTop + offsetY - padT);\n        br = new Point(textLeft + offsetX + padR + width, textTop + offsetY + padB + height);\n        bl = new Point(textLeft + offsetX - padL,         textTop + offsetY + padB + height);\n    // Normal icon size mode\n    } else {\n        tl = new Point(left, top);\n        tr = new Point(right, top);\n        br = new Point(right, bottom);\n        bl = new Point(left, bottom);\n    }\n\n    const angle = layer.layout.get('icon-rotate').evaluate(feature, {}) * Math.PI / 180;\n\n    if (angle) {\n        const sin = Math.sin(angle),\n            cos = Math.cos(angle),\n            matrix = [cos, -sin, sin, cos];\n\n        tl._matMult(matrix);\n        tr._matMult(matrix);\n        bl._matMult(matrix);\n        br._matMult(matrix);\n    }\n\n    // Icon quad is padded, so texture coordinates also need to be padded.\n    return [{tl, tr, bl, br, tex: image.paddedRect, writingMode: undefined, glyphOffset: [0, 0]}];\n}\n\n/**\n * Create the quads used for rendering a text label.\n * @private\n */\nexport function getGlyphQuads(anchor: Anchor,\n                       shaping: Shaping,\n                       layer: SymbolStyleLayer,\n                       alongLine: boolean,\n                       feature: Feature,\n                       positions: {[string]: {[number]: GlyphPosition}}): Array<SymbolQuad> {\n\n    const oneEm = 24;\n    const textRotate = layer.layout.get('text-rotate').evaluate(feature, {}) * Math.PI / 180;\n    const textOffset = layer.layout.get('text-offset').evaluate(feature, {}).map((t) => t * oneEm);\n\n    const positionedGlyphs = shaping.positionedGlyphs;\n    const quads = [];\n\n\n    for (let k = 0; k < positionedGlyphs.length; k++) {\n        const positionedGlyph = positionedGlyphs[k];\n        const glyphPositions = positions[positionedGlyph.fontStack];\n        const glyph = glyphPositions && glyphPositions[positionedGlyph.glyph];\n        if (!glyph) continue;\n\n        const rect = glyph.rect;\n        if (!rect) continue;\n\n        // The rects have an addditional buffer that is not included in their size.\n        const glyphPadding = 1.0;\n        const rectBuffer = GLYPH_PBF_BORDER + glyphPadding;\n\n        const halfAdvance = glyph.metrics.advance * positionedGlyph.scale / 2;\n\n        const glyphOffset = alongLine ?\n            [positionedGlyph.x + halfAdvance, positionedGlyph.y] :\n            [0, 0];\n\n        const builtInOffset = alongLine ?\n            [0, 0] :\n            [positionedGlyph.x + halfAdvance + textOffset[0], positionedGlyph.y + textOffset[1]];\n\n        const x1 = (glyph.metrics.left - rectBuffer) * positionedGlyph.scale - halfAdvance + builtInOffset[0];\n        const y1 = (-glyph.metrics.top - rectBuffer) * positionedGlyph.scale + builtInOffset[1];\n        const x2 = x1 + rect.w * positionedGlyph.scale;\n        const y2 = y1 + rect.h * positionedGlyph.scale;\n\n        const tl = new Point(x1, y1);\n        const tr = new Point(x2, y1);\n        const bl  = new Point(x1, y2);\n        const br = new Point(x2, y2);\n\n        if (alongLine && positionedGlyph.vertical) {\n            // Vertical-supporting glyphs are laid out in 24x24 point boxes (1 square em)\n            // In horizontal orientation, the y values for glyphs are below the midline\n            // and we use a \"yOffset\" of -17 to pull them up to the middle.\n            // By rotating counter-clockwise around the point at the center of the left\n            // edge of a 24x24 layout box centered below the midline, we align the center\n            // of the glyphs with the horizontal midline, so the yOffset is no longer\n            // necessary, but we also pull the glyph to the left along the x axis\n            const center = new Point(-halfAdvance, halfAdvance);\n            const verticalRotation = -Math.PI / 2;\n            const xOffsetCorrection = new Point(5, 0);\n            tl._rotateAround(verticalRotation, center)._add(xOffsetCorrection);\n            tr._rotateAround(verticalRotation, center)._add(xOffsetCorrection);\n            bl._rotateAround(verticalRotation, center)._add(xOffsetCorrection);\n            br._rotateAround(verticalRotation, center)._add(xOffsetCorrection);\n        }\n\n        if (textRotate) {\n            const sin = Math.sin(textRotate),\n                cos = Math.cos(textRotate),\n                matrix = [cos, -sin, sin, cos];\n\n            tl._matMult(matrix);\n            tr._matMult(matrix);\n            bl._matMult(matrix);\n            br._matMult(matrix);\n        }\n\n        quads.push({tl, tr, bl, br, tex: rect, writingMode: shaping.writingMode, glyphOffset});\n    }\n\n    return quads;\n}\n","// @flow\n\nimport Point from '@mapbox/point-geometry';\n\nexport default clipLine;\n\n/**\n * Returns the part of a multiline that intersects with the provided rectangular box.\n *\n * @param lines\n * @param x1 the left edge of the box\n * @param y1 the top edge of the box\n * @param x2 the right edge of the box\n * @param y2 the bottom edge of the box\n * @returns lines\n * @private\n */\nfunction clipLine(lines: Array<Array<Point>>, x1: number, y1: number, x2: number, y2: number): Array<Array<Point>> {\n    const clippedLines = [];\n\n    for (let l = 0; l < lines.length; l++) {\n        const line = lines[l];\n        let clippedLine;\n\n        for (let i = 0; i < line.length - 1; i++) {\n            let p0 = line[i];\n            let p1 = line[i + 1];\n\n\n            if (p0.x < x1 && p1.x < x1) {\n                continue;\n            } else if (p0.x < x1) {\n                p0 = new Point(x1, p0.y + (p1.y - p0.y) * ((x1 - p0.x) / (p1.x - p0.x)))._round();\n            } else if (p1.x < x1) {\n                p1 = new Point(x1, p0.y + (p1.y - p0.y) * ((x1 - p0.x) / (p1.x - p0.x)))._round();\n            }\n\n            if (p0.y < y1 && p1.y < y1) {\n                continue;\n            } else if (p0.y < y1) {\n                p0 = new Point(p0.x + (p1.x - p0.x) * ((y1 - p0.y) / (p1.y - p0.y)), y1)._round();\n            } else if (p1.y < y1) {\n                p1 = new Point(p0.x + (p1.x - p0.x) * ((y1 - p0.y) / (p1.y - p0.y)), y1)._round();\n            }\n\n            if (p0.x >= x2 && p1.x >= x2) {\n                continue;\n            } else if (p0.x >= x2) {\n                p0 = new Point(x2, p0.y + (p1.y - p0.y) * ((x2 - p0.x) / (p1.x - p0.x)))._round();\n            } else if (p1.x >= x2) {\n                p1 = new Point(x2, p0.y + (p1.y - p0.y) * ((x2 - p0.x) / (p1.x - p0.x)))._round();\n            }\n\n            if (p0.y >= y2 && p1.y >= y2) {\n                continue;\n            } else if (p0.y >= y2) {\n                p0 = new Point(p0.x + (p1.x - p0.x) * ((y2 - p0.y) / (p1.y - p0.y)), y2)._round();\n            } else if (p1.y >= y2) {\n                p1 = new Point(p0.x + (p1.x - p0.x) * ((y2 - p0.y) / (p1.y - p0.y)), y2)._round();\n            }\n\n            if (!clippedLine || !p0.equals(clippedLine[clippedLine.length - 1])) {\n                clippedLine = [p0];\n                clippedLines.push(clippedLine);\n            }\n\n            clippedLine.push(p1);\n        }\n    }\n\n    return clippedLines;\n}\n","// @flow\n\nimport { AlphaImage } from '../util/image';\nimport { register } from '../util/web_worker_transfer';\nimport potpack from 'potpack';\n\nimport type {GlyphMetrics, StyleGlyph} from '../style/style_glyph';\n\nconst padding = 1;\n\ntype Rect = {\n    x: number,\n    y: number,\n    w: number,\n    h: number\n};\n\nexport type GlyphPosition = {\n    rect: Rect,\n    metrics: GlyphMetrics\n};\n\nexport type GlyphPositions = { [string]: { [number]: GlyphPosition } }\n\nexport default class GlyphAtlas {\n    image: AlphaImage;\n    positions: GlyphPositions;\n\n    constructor(stacks: { [string]: { [number]: ?StyleGlyph } }) {\n        const positions = {};\n        const bins = [];\n\n        for (const stack in stacks) {\n            const glyphs = stacks[stack];\n            const stackPositions = positions[stack] = {};\n\n            for (const id in glyphs) {\n                const src = glyphs[+id];\n                if (!src || src.bitmap.width === 0 || src.bitmap.height === 0) continue;\n\n                const bin = {\n                    x: 0,\n                    y: 0,\n                    w: src.bitmap.width + 2 * padding,\n                    h: src.bitmap.height + 2 * padding\n                };\n                bins.push(bin);\n                stackPositions[id] = {rect: bin, metrics: src.metrics};\n            }\n        }\n\n        const {w, h} = potpack(bins);\n        const image = new AlphaImage({width: w || 1, height: h || 1});\n\n        for (const stack in stacks) {\n            const glyphs = stacks[stack];\n\n            for (const id in glyphs) {\n                const src = glyphs[+id];\n                if (!src || src.bitmap.width === 0 || src.bitmap.height === 0) continue;\n                const bin = positions[stack][id].rect;\n                AlphaImage.copy(src.bitmap, image, {x: 0, y: 0}, {x: bin.x + padding, y: bin.y + padding}, src.bitmap);\n            }\n        }\n\n        this.image = image;\n        this.positions = positions;\n    }\n}\n\nregister('GlyphAtlas', GlyphAtlas);\n","// @flow\n\nimport FeatureIndex from '../data/feature_index';\n\nimport { performSymbolLayout } from '../symbol/symbol_layout';\nimport { CollisionBoxArray } from '../data/array_types';\nimport DictionaryCoder from '../util/dictionary_coder';\nimport SymbolBucket from '../data/bucket/symbol_bucket';\nimport LineBucket from '../data/bucket/line_bucket';\nimport FillBucket from '../data/bucket/fill_bucket';\nimport FillExtrusionBucket from '../data/bucket/fill_extrusion_bucket';\nimport { warnOnce, mapObject, values } from '../util/util';\nimport assert from 'assert';\nimport ImageAtlas from '../render/image_atlas';\nimport GlyphAtlas from '../render/glyph_atlas';\nimport EvaluationParameters from '../style/evaluation_parameters';\nimport { OverscaledTileID } from './tile_id';\n\nimport type {Bucket} from '../data/bucket';\nimport type Actor from '../util/actor';\nimport type StyleLayer from '../style/style_layer';\nimport type StyleLayerIndex from '../style/style_layer_index';\nimport type {StyleImage} from '../style/style_image';\nimport type {StyleGlyph} from '../style/style_glyph';\nimport type {\n    WorkerTileParameters,\n    WorkerTileCallback,\n} from '../source/worker_source';\n\nclass WorkerTile {\n    tileID: OverscaledTileID;\n    uid: string;\n    zoom: number;\n    pixelRatio: number;\n    tileSize: number;\n    source: string;\n    overscaling: number;\n    showCollisionBoxes: boolean;\n    collectResourceTiming: boolean;\n    returnDependencies: boolean;\n\n    status: 'parsing' | 'done';\n    data: VectorTile;\n    collisionBoxArray: CollisionBoxArray;\n\n    abort: ?() => void;\n    reloadCallback: WorkerTileCallback;\n    vectorTile: VectorTile;\n\n    constructor(params: WorkerTileParameters) {\n        this.tileID = new OverscaledTileID(params.tileID.overscaledZ, params.tileID.wrap, params.tileID.canonical.z, params.tileID.canonical.x, params.tileID.canonical.y);\n        this.uid = params.uid;\n        this.zoom = params.zoom;\n        this.pixelRatio = params.pixelRatio;\n        this.tileSize = params.tileSize;\n        this.source = params.source;\n        this.overscaling = this.tileID.overscaleFactor();\n        this.showCollisionBoxes = params.showCollisionBoxes;\n        this.collectResourceTiming = !!params.collectResourceTiming;\n        this.returnDependencies = !!params.returnDependencies;\n    }\n\n    parse(data: VectorTile, layerIndex: StyleLayerIndex, actor: Actor, callback: WorkerTileCallback) {\n        this.status = 'parsing';\n        this.data = data;\n\n        this.collisionBoxArray = new CollisionBoxArray();\n        const sourceLayerCoder = new DictionaryCoder(Object.keys(data.layers).sort());\n\n        const featureIndex = new FeatureIndex(this.tileID);\n        featureIndex.bucketLayerIDs = [];\n\n        const buckets: {[string]: Bucket} = {};\n\n        const options = {\n            featureIndex,\n            iconDependencies: {},\n            patternDependencies: {},\n            glyphDependencies: {}\n        };\n\n        const layerFamilies = layerIndex.familiesBySource[this.source];\n        for (const sourceLayerId in layerFamilies) {\n            const sourceLayer = data.layers[sourceLayerId];\n            if (!sourceLayer) {\n                continue;\n            }\n\n            if (sourceLayer.version === 1) {\n                warnOnce(`Vector tile source \"${this.source}\" layer \"${sourceLayerId}\" ` +\n                    `does not use vector tile spec v2 and therefore may have some rendering errors.`);\n            }\n\n            const sourceLayerIndex = sourceLayerCoder.encode(sourceLayerId);\n            const features = [];\n            for (let index = 0; index < sourceLayer.length; index++) {\n                const feature = sourceLayer.feature(index);\n                features.push({ feature, index, sourceLayerIndex });\n            }\n\n            for (const family of layerFamilies[sourceLayerId]) {\n                const layer = family[0];\n\n                assert(layer.source === this.source);\n                if (layer.minzoom && this.zoom < Math.floor(layer.minzoom)) continue;\n                if (layer.maxzoom && this.zoom >= layer.maxzoom) continue;\n                if (layer.visibility === 'none') continue;\n\n                recalculateLayers(family, this.zoom);\n\n                const bucket = buckets[layer.id] = layer.createBucket({\n                    index: featureIndex.bucketLayerIDs.length,\n                    layers: family,\n                    zoom: this.zoom,\n                    pixelRatio: this.pixelRatio,\n                    overscaling: this.overscaling,\n                    collisionBoxArray: this.collisionBoxArray,\n                    sourceLayerIndex,\n                    sourceID: this.source\n                });\n\n                bucket.populate(features, options);\n                featureIndex.bucketLayerIDs.push(family.map((l) => l.id));\n            }\n        }\n\n        let error: ?Error;\n        let glyphMap: ?{[string]: {[number]: ?StyleGlyph}};\n        let iconMap: ?{[string]: StyleImage};\n        let patternMap: ?{[string]: StyleImage};\n\n        const stacks = mapObject(options.glyphDependencies, (glyphs) => Object.keys(glyphs).map(Number));\n        if (Object.keys(stacks).length) {\n            actor.send('getGlyphs', {uid: this.uid, stacks}, (err, result) => {\n                if (!error) {\n                    error = err;\n                    glyphMap = result;\n                    maybePrepare.call(this);\n                }\n            });\n        } else {\n            glyphMap = {};\n        }\n\n        const icons = Object.keys(options.iconDependencies);\n        if (icons.length) {\n            actor.send('getImages', {icons}, (err, result) => {\n                if (!error) {\n                    error = err;\n                    iconMap = result;\n                    maybePrepare.call(this);\n                }\n            });\n        } else {\n            iconMap = {};\n        }\n\n        const patterns = Object.keys(options.patternDependencies);\n        if (patterns.length) {\n            actor.send('getImages', {icons: patterns}, (err, result) => {\n                if (!error) {\n                    error = err;\n                    patternMap = result;\n                    maybePrepare.call(this);\n                }\n            });\n        } else {\n            patternMap = {};\n        }\n\n\n        maybePrepare.call(this);\n\n        function maybePrepare() {\n            if (error) {\n                return callback(error);\n            } else if (glyphMap && iconMap && patternMap) {\n                const glyphAtlas = new GlyphAtlas(glyphMap);\n                const imageAtlas = new ImageAtlas(iconMap, patternMap);\n\n                for (const key in buckets) {\n                    const bucket = buckets[key];\n                    if (bucket instanceof SymbolBucket) {\n                        recalculateLayers(bucket.layers, this.zoom);\n                        performSymbolLayout(bucket, glyphMap, glyphAtlas.positions, iconMap, imageAtlas.iconPositions, this.showCollisionBoxes);\n                    } else if (bucket.hasPattern &&\n                        (bucket instanceof LineBucket ||\n                         bucket instanceof FillBucket ||\n                         bucket instanceof FillExtrusionBucket)) {\n                        recalculateLayers(bucket.layers, this.zoom);\n                        bucket.addFeatures(options, imageAtlas.patternPositions);\n                    }\n                }\n\n                this.status = 'done';\n                callback(null, {\n                    buckets: values(buckets).filter(b => !b.isEmpty()),\n                    featureIndex,\n                    collisionBoxArray: this.collisionBoxArray,\n                    glyphAtlasImage: glyphAtlas.image,\n                    imageAtlas,\n                    // Only used for benchmarking:\n                    glyphMap: this.returnDependencies ? glyphMap : null,\n                    iconMap: this.returnDependencies ? iconMap : null,\n                    glyphPositions: this.returnDependencies ? glyphAtlas.positions : null\n                });\n            }\n        }\n    }\n}\n\nfunction recalculateLayers(layers: $ReadOnlyArray<StyleLayer>, zoom: number) {\n    // Layers are shared and may have been used by a WorkerTile with a different zoom.\n    const parameters = new EvaluationParameters(zoom);\n    for (const layer of layers) {\n        layer.recalculate(parameters);\n    }\n}\n\nexport default WorkerTile;\n","// @flow\n\nimport type {RequestParameters} from '../util/ajax';\n\n// Wraps performance to facilitate testing\n// Not incorporated into browser.js because the latter is poisonous when used outside the main thread\nconst performanceExists = typeof performance !== 'undefined';\nconst wrapper = {};\n\nwrapper.getEntriesByName = (url: string) => {\n    if (performanceExists && performance && performance.getEntriesByName)\n        return performance.getEntriesByName(url);\n    else\n        return false;\n};\n\nwrapper.mark = (name: string) => {\n    if (performanceExists && performance && performance.mark)\n        return performance.mark(name);\n    else\n        return false;\n};\n\nwrapper.measure = (name: string, startMark: string, endMark: string) => {\n    if (performanceExists && performance && performance.measure)\n        return performance.measure(name, startMark, endMark);\n    else\n        return false;\n};\n\nwrapper.clearMarks = (name: string) => {\n    if (performanceExists && performance && performance.clearMarks)\n        return performance.clearMarks(name);\n    else\n        return false;\n};\n\nwrapper.clearMeasures = (name: string) => {\n    if (performanceExists && performance && performance.clearMeasures)\n        return performance.clearMeasures(name);\n    else\n        return false;\n};\n\n/**\n * Safe wrapper for the performance resource timing API in web workers with graceful degradation\n *\n * @param {RequestParameters} request\n * @private\n */\nclass Performance {\n    _marks: {start: string, end: string, measure: string};\n\n    constructor (request: RequestParameters) {\n        this._marks = {\n            start: [request.url, 'start'].join('#'),\n            end: [request.url, 'end'].join('#'),\n            measure: request.url.toString()\n        };\n\n        wrapper.mark(this._marks.start);\n    }\n\n    finish() {\n        wrapper.mark(this._marks.end);\n        let resourceTimingData = wrapper.getEntriesByName(this._marks.measure);\n\n        // fallback if web worker implementation of perf.getEntriesByName returns empty\n        if (resourceTimingData.length === 0) {\n            wrapper.measure(this._marks.measure, this._marks.start, this._marks.end);\n            resourceTimingData = wrapper.getEntriesByName(this._marks.measure);\n\n            // cleanup\n            wrapper.clearMarks(this._marks.start);\n            wrapper.clearMarks(this._marks.end);\n            wrapper.clearMeasures(this._marks.measure);\n        }\n\n        return resourceTimingData;\n    }\n}\n\nwrapper.Performance = Performance;\n\nexport default wrapper;\n","// @flow\n\nimport { getArrayBuffer } from '../util/ajax';\n\nimport vt from '@mapbox/vector-tile';\nimport Protobuf from 'pbf';\nimport WorkerTile from './worker_tile';\nimport { extend } from '../util/util';\nimport performance from '../util/performance';\n\nimport type {\n    WorkerSource,\n    WorkerTileParameters,\n    WorkerTileCallback,\n    TileParameters\n} from '../source/worker_source';\n\nimport type {PerformanceResourceTiming} from '../types/performance_resource_timing';\nimport type Actor from '../util/actor';\nimport type StyleLayerIndex from '../style/style_layer_index';\nimport type {Callback} from '../types/callback';\n\nexport type LoadVectorTileResult = {\n    vectorTile: VectorTile;\n    rawData: ArrayBuffer;\n    expires?: any;\n    cacheControl?: any;\n    resourceTiming?: Array<PerformanceResourceTiming>;\n};\n\n/**\n * @callback LoadVectorDataCallback\n * @param error\n * @param vectorTile\n * @private\n */\nexport type LoadVectorDataCallback = Callback<?LoadVectorTileResult>;\n\nexport type AbortVectorData = () => void;\nexport type LoadVectorData = (params: WorkerTileParameters, callback: LoadVectorDataCallback) => ?AbortVectorData;\n\n/**\n * @private\n */\nfunction loadVectorTile(params: WorkerTileParameters, callback: LoadVectorDataCallback) {\n    const request = getArrayBuffer(params.request, (err: ?Error, data: ?ArrayBuffer, cacheControl: ?string, expires: ?string) => {\n        if (err) {\n            callback(err);\n        } else if (data) {\n            callback(null, {\n                vectorTile: new vt.VectorTile(new Protobuf(data)),\n                rawData: data,\n                cacheControl,\n                expires\n            });\n        }\n    });\n    return () => {\n        request.cancel();\n        callback();\n    };\n}\n\n/**\n * The {@link WorkerSource} implementation that supports {@link VectorTileSource}.\n * This class is designed to be easily reused to support custom source types\n * for data formats that can be parsed/converted into an in-memory VectorTile\n * representation.  To do so, create it with\n * `new VectorTileWorkerSource(actor, styleLayers, customLoadVectorDataFunction)`.\n *\n * @private\n */\nclass VectorTileWorkerSource implements WorkerSource {\n    actor: Actor;\n    layerIndex: StyleLayerIndex;\n    loadVectorData: LoadVectorData;\n    loading: { [string]: WorkerTile };\n    loaded: { [string]: WorkerTile };\n\n    /**\n     * @param [loadVectorData] Optional method for custom loading of a VectorTile\n     * object based on parameters passed from the main-thread Source. See\n     * {@link VectorTileWorkerSource#loadTile}. The default implementation simply\n     * loads the pbf at `params.url`.\n     */\n    constructor(actor: Actor, layerIndex: StyleLayerIndex, loadVectorData: ?LoadVectorData) {\n        this.actor = actor;\n        this.layerIndex = layerIndex;\n        this.loadVectorData = loadVectorData || loadVectorTile;\n        this.loading = {};\n        this.loaded = {};\n    }\n\n    /**\n     * Implements {@link WorkerSource#loadTile}. Delegates to\n     * {@link VectorTileWorkerSource#loadVectorData} (which by default expects\n     * a `params.url` property) for fetching and producing a VectorTile object.\n     */\n    loadTile(params: WorkerTileParameters, callback: WorkerTileCallback) {\n        const uid = params.uid;\n\n        if (!this.loading)\n            this.loading = {};\n\n        const perf = (params && params.request && params.request.collectResourceTiming) ?\n            new performance.Performance(params.request) : false;\n\n        const workerTile = this.loading[uid] = new WorkerTile(params);\n        workerTile.abort = this.loadVectorData(params, (err, response) => {\n            delete this.loading[uid];\n\n            if (err || !response) {\n                workerTile.status = 'done';\n                this.loaded[uid] = workerTile;\n                return callback(err);\n            }\n\n            const rawTileData = response.rawData;\n            const cacheControl = {};\n            if (response.expires) cacheControl.expires = response.expires;\n            if (response.cacheControl) cacheControl.cacheControl = response.cacheControl;\n\n            const resourceTiming = {};\n            if (perf) {\n                const resourceTimingData = perf.finish();\n                // it's necessary to eval the result of getEntriesByName() here via parse/stringify\n                // late evaluation in the main thread causes TypeError: illegal invocation\n                if (resourceTimingData)\n                    resourceTiming.resourceTiming = JSON.parse(JSON.stringify(resourceTimingData));\n            }\n\n            workerTile.vectorTile = response.vectorTile;\n            workerTile.parse(response.vectorTile, this.layerIndex, this.actor, (err, result) => {\n                if (err || !result) return callback(err);\n\n                // Transferring a copy of rawTileData because the worker needs to retain its copy.\n                callback(null, extend({rawTileData: rawTileData.slice(0)}, result, cacheControl, resourceTiming));\n            });\n\n            this.loaded = this.loaded || {};\n            this.loaded[uid] = workerTile;\n        });\n    }\n\n    /**\n     * Implements {@link WorkerSource#reloadTile}.\n     */\n    reloadTile(params: WorkerTileParameters, callback: WorkerTileCallback) {\n        const loaded = this.loaded,\n            uid = params.uid,\n            vtSource = this;\n        if (loaded && loaded[uid]) {\n            const workerTile = loaded[uid];\n            workerTile.showCollisionBoxes = params.showCollisionBoxes;\n\n            const done = (err, data) => {\n                const reloadCallback = workerTile.reloadCallback;\n                if (reloadCallback) {\n                    delete workerTile.reloadCallback;\n                    workerTile.parse(workerTile.vectorTile, vtSource.layerIndex, vtSource.actor, reloadCallback);\n                }\n                callback(err, data);\n            };\n\n            if (workerTile.status === 'parsing') {\n                workerTile.reloadCallback = done;\n            } else if (workerTile.status === 'done') {\n                // if there was no vector tile data on the initial load, don't try and re-parse tile\n                if (workerTile.vectorTile) {\n                    workerTile.parse(workerTile.vectorTile, this.layerIndex, this.actor, done);\n                } else {\n                    done();\n                }\n            }\n        }\n    }\n\n    /**\n     * Implements {@link WorkerSource#abortTile}.\n     *\n     * @param params\n     * @param params.uid The UID for this tile.\n     */\n    abortTile(params: TileParameters, callback: WorkerTileCallback) {\n        const loading = this.loading,\n            uid = params.uid;\n        if (loading && loading[uid] && loading[uid].abort) {\n            loading[uid].abort();\n            delete loading[uid];\n        }\n        callback();\n    }\n\n    /**\n     * Implements {@link WorkerSource#removeTile}.\n     *\n     * @param params\n     * @param params.uid The UID for this tile.\n     */\n    removeTile(params: TileParameters, callback: WorkerTileCallback) {\n        const loaded = this.loaded,\n            uid = params.uid;\n        if (loaded && loaded[uid]) {\n            delete loaded[uid];\n        }\n        callback();\n    }\n}\n\nexport default VectorTileWorkerSource;\n","// @flow\n\nimport DEMData from '../data/dem_data';\n\nimport type Actor from '../util/actor';\nimport type {\n    WorkerDEMTileParameters,\n    WorkerDEMTileCallback,\n    TileParameters\n} from './worker_source';\n\n\nclass RasterDEMTileWorkerSource {\n    actor: Actor;\n    loaded: {[string]: DEMData};\n\n    constructor() {\n        this.loaded = {};\n    }\n\n    loadTile(params: WorkerDEMTileParameters, callback: WorkerDEMTileCallback) {\n        const {uid, encoding, rawImageData} = params;\n        const dem = new DEMData(uid, rawImageData, encoding);\n\n        this.loaded = this.loaded || {};\n        this.loaded[uid] = dem;\n        callback(null, dem);\n    }\n\n    removeTile(params: TileParameters) {\n        const loaded = this.loaded,\n            uid = params.uid;\n        if (loaded && loaded[uid]) {\n            delete loaded[uid];\n        }\n    }\n}\n\nexport default RasterDEMTileWorkerSource;\n","module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n","var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}","var geojsonArea = require('@mapbox/geojson-area');\n\nmodule.exports = rewind;\n\nfunction rewind(gj, outer) {\n    switch ((gj && gj.type) || null) {\n        case 'FeatureCollection':\n            gj.features = gj.features.map(curryOuter(rewind, outer));\n            return gj;\n        case 'GeometryCollection':\n            gj.geometries = gj.geometries.map(curryOuter(rewind, outer));\n            return gj;\n        case 'Feature':\n            gj.geometry = rewind(gj.geometry, outer);\n            return gj;\n        case 'Polygon':\n        case 'MultiPolygon':\n            return correct(gj, outer);\n        default:\n            return gj;\n    }\n}\n\nfunction curryOuter(a, b) {\n    return function(_) { return a(_, b); };\n}\n\nfunction correct(_, outer) {\n    if (_.type === 'Polygon') {\n        _.coordinates = correctRings(_.coordinates, outer);\n    } else if (_.type === 'MultiPolygon') {\n        _.coordinates = _.coordinates.map(curryOuter(correctRings, outer));\n    }\n    return _;\n}\n\nfunction correctRings(_, outer) {\n    outer = !!outer;\n    _[0] = wind(_[0], outer);\n    for (var i = 1; i < _.length; i++) {\n        _[i] = wind(_[i], !outer);\n    }\n    return _;\n}\n\nfunction wind(_, dir) {\n    return cw(_) === dir ? _ : _.reverse();\n}\n\nfunction cw(_) {\n    return geojsonArea.ring(_) >= 0;\n}\n","// @flow\n\nimport Point from '@mapbox/point-geometry';\n\nimport mvt from '@mapbox/vector-tile';\nconst toGeoJSON = mvt.VectorTileFeature.prototype.toGeoJSON;\nimport EXTENT from '../data/extent';\n\n// The feature type used by geojson-vt and supercluster. Should be extracted to\n// global type and used in module definitions for those two modules.\ntype Feature = {\n    type: 1,\n    id: mixed,\n    tags: {[string]: string | number | boolean},\n    geometry: Array<[number, number]>,\n} | {\n    type: 2 | 3,\n    id: mixed,\n    tags: {[string]: string | number | boolean},\n    geometry: Array<Array<[number, number]>>,\n}\n\nclass FeatureWrapper implements VectorTileFeature {\n    _feature: Feature;\n\n    extent: number;\n    type: 1 | 2 | 3;\n    id: number;\n    properties: {[string]: string | number | boolean};\n\n    constructor(feature: Feature) {\n        this._feature = feature;\n\n        this.extent = EXTENT;\n        this.type = feature.type;\n        this.properties = feature.tags;\n\n        // If the feature has a top-level `id` property, copy it over, but only\n        // if it can be coerced to an integer, because this wrapper is used for\n        // serializing geojson feature data into vector tile PBF data, and the\n        // vector tile spec only supports integer values for feature ids --\n        // allowing non-integer values here results in a non-compliant PBF\n        // that causes an exception when it is parsed with vector-tile-js\n        if ('id' in feature && !isNaN(feature.id)) {\n            this.id = parseInt(feature.id, 10);\n        }\n    }\n\n    loadGeometry() {\n        if (this._feature.type === 1) {\n            const geometry = [];\n            for (const point of this._feature.geometry) {\n                geometry.push([new Point(point[0], point[1])]);\n            }\n            return geometry;\n        } else {\n            const geometry = [];\n            for (const ring of this._feature.geometry) {\n                const newRing = [];\n                for (const point of ring) {\n                    newRing.push(new Point(point[0], point[1]));\n                }\n                geometry.push(newRing);\n            }\n            return geometry;\n        }\n    }\n\n    toGeoJSON(x: number, y: number, z: number) {\n        return toGeoJSON.call(this, x, y, z);\n    }\n}\n\nclass GeoJSONWrapper implements VectorTile, VectorTileLayer {\n    layers: {[string]: VectorTileLayer};\n    name: string;\n    extent: number;\n    length: number;\n    _features: Array<Feature>;\n\n    constructor(features: Array<Feature>) {\n        this.layers = { '_geojsonTileLayer': this };\n        this.name = '_geojsonTileLayer';\n        this.extent = EXTENT;\n        this.length = features.length;\n        this._features = features;\n    }\n\n    feature(i: number): VectorTileFeature {\n        return new FeatureWrapper(this._features[i]);\n    }\n}\n\nexport default GeoJSONWrapper;\n","'use strict'\n\nvar Point = require('@mapbox/point-geometry')\nvar VectorTileFeature = require('@mapbox/vector-tile').VectorTileFeature\n\nmodule.exports = GeoJSONWrapper\n\n// conform to vectortile api\nfunction GeoJSONWrapper (features, options) {\n  this.options = options || {}\n  this.features = features\n  this.length = features.length\n}\n\nGeoJSONWrapper.prototype.feature = function (i) {\n  return new FeatureWrapper(this.features[i], this.options.extent)\n}\n\nfunction FeatureWrapper (feature, extent) {\n  this.id = typeof feature.id === 'number' ? feature.id : undefined\n  this.type = feature.type\n  this.rawGeometry = feature.type === 1 ? [feature.geometry] : feature.geometry\n  this.properties = feature.tags\n  this.extent = extent || 4096\n}\n\nFeatureWrapper.prototype.loadGeometry = function () {\n  var rings = this.rawGeometry\n  this.geometry = []\n\n  for (var i = 0; i < rings.length; i++) {\n    var ring = rings[i]\n    var newRing = []\n    for (var j = 0; j < ring.length; j++) {\n      newRing.push(new Point(ring[j][0], ring[j][1]))\n    }\n    this.geometry.push(newRing)\n  }\n  return this.geometry\n}\n\nFeatureWrapper.prototype.bbox = function () {\n  if (!this.geometry) this.loadGeometry()\n\n  var rings = this.geometry\n  var x1 = Infinity\n  var x2 = -Infinity\n  var y1 = Infinity\n  var y2 = -Infinity\n\n  for (var i = 0; i < rings.length; i++) {\n    var ring = rings[i]\n\n    for (var j = 0; j < ring.length; j++) {\n      var coord = ring[j]\n\n      x1 = Math.min(x1, coord.x)\n      x2 = Math.max(x2, coord.x)\n      y1 = Math.min(y1, coord.y)\n      y2 = Math.max(y2, coord.y)\n    }\n  }\n\n  return [x1, y1, x2, y2]\n}\n\nFeatureWrapper.prototype.toGeoJSON = VectorTileFeature.prototype.toGeoJSON\n","var Pbf = require('pbf')\nvar GeoJSONWrapper = require('./lib/geojson_wrapper')\n\nmodule.exports = fromVectorTileJs\nmodule.exports.fromVectorTileJs = fromVectorTileJs\nmodule.exports.fromGeojsonVt = fromGeojsonVt\nmodule.exports.GeoJSONWrapper = GeoJSONWrapper\n\n/**\n * Serialize a vector-tile-js-created tile to pbf\n *\n * @param {Object} tile\n * @return {Buffer} uncompressed, pbf-serialized tile data\n */\nfunction fromVectorTileJs (tile) {\n  var out = new Pbf()\n  writeTile(tile, out)\n  return out.finish()\n}\n\n/**\n * Serialized a geojson-vt-created tile to pbf.\n *\n * @param {Object} layers - An object mapping layer names to geojson-vt-created vector tile objects\n * @param {Object} [options] - An object specifying the vector-tile specification version and extent that were used to create `layers`.\n * @param {Number} [options.version=1] - Version of vector-tile spec used\n * @param {Number} [options.extent=4096] - Extent of the vector tile\n * @return {Buffer} uncompressed, pbf-serialized tile data\n */\nfunction fromGeojsonVt (layers, options) {\n  options = options || {}\n  var l = {}\n  for (var k in layers) {\n    l[k] = new GeoJSONWrapper(layers[k].features, options)\n    l[k].name = k\n    l[k].version = options.version\n    l[k].extent = options.extent\n  }\n  return fromVectorTileJs({layers: l})\n}\n\nfunction writeTile (tile, pbf) {\n  for (var key in tile.layers) {\n    pbf.writeMessage(3, writeLayer, tile.layers[key])\n  }\n}\n\nfunction writeLayer (layer, pbf) {\n  pbf.writeVarintField(15, layer.version || 1)\n  pbf.writeStringField(1, layer.name || '')\n  pbf.writeVarintField(5, layer.extent || 4096)\n\n  var i\n  var context = {\n    keys: [],\n    values: [],\n    keycache: {},\n    valuecache: {}\n  }\n\n  for (i = 0; i < layer.length; i++) {\n    context.feature = layer.feature(i)\n    pbf.writeMessage(2, writeFeature, context)\n  }\n\n  var keys = context.keys\n  for (i = 0; i < keys.length; i++) {\n    pbf.writeStringField(3, keys[i])\n  }\n\n  var values = context.values\n  for (i = 0; i < values.length; i++) {\n    pbf.writeMessage(4, writeValue, values[i])\n  }\n}\n\nfunction writeFeature (context, pbf) {\n  var feature = context.feature\n\n  if (feature.id !== undefined) {\n    pbf.writeVarintField(1, feature.id)\n  }\n\n  pbf.writeMessage(2, writeProperties, context)\n  pbf.writeVarintField(3, feature.type)\n  pbf.writeMessage(4, writeGeometry, feature)\n}\n\nfunction writeProperties (context, pbf) {\n  var feature = context.feature\n  var keys = context.keys\n  var values = context.values\n  var keycache = context.keycache\n  var valuecache = context.valuecache\n\n  for (var key in feature.properties) {\n    var keyIndex = keycache[key]\n    if (typeof keyIndex === 'undefined') {\n      keys.push(key)\n      keyIndex = keys.length - 1\n      keycache[key] = keyIndex\n    }\n    pbf.writeVarint(keyIndex)\n\n    var value = feature.properties[key]\n    var type = typeof value\n    if (type !== 'string' && type !== 'boolean' && type !== 'number') {\n      value = JSON.stringify(value)\n    }\n    var valueKey = type + ':' + value\n    var valueIndex = valuecache[valueKey]\n    if (typeof valueIndex === 'undefined') {\n      values.push(value)\n      valueIndex = values.length - 1\n      valuecache[valueKey] = valueIndex\n    }\n    pbf.writeVarint(valueIndex)\n  }\n}\n\nfunction command (cmd, length) {\n  return (length << 3) + (cmd & 0x7)\n}\n\nfunction zigzag (num) {\n  return (num << 1) ^ (num >> 31)\n}\n\nfunction writeGeometry (feature, pbf) {\n  var geometry = feature.loadGeometry()\n  var type = feature.type\n  var x = 0\n  var y = 0\n  var rings = geometry.length\n  for (var r = 0; r < rings; r++) {\n    var ring = geometry[r]\n    var count = 1\n    if (type === 1) {\n      count = ring.length\n    }\n    pbf.writeVarint(command(1, count)) // moveto\n    // do not write polygon closing path as lineto\n    var lineCount = type === 3 ? ring.length - 1 : ring.length\n    for (var i = 0; i < lineCount; i++) {\n      if (i === 1 && type !== 1) {\n        pbf.writeVarint(command(2, lineCount - 1)) // lineto\n      }\n      var dx = ring[i].x - x\n      var dy = ring[i].y - y\n      pbf.writeVarint(zigzag(dx))\n      pbf.writeVarint(zigzag(dy))\n      x += dx\n      y += dy\n    }\n    if (type === 3) {\n      pbf.writeVarint(command(7, 1)) // closepath\n    }\n  }\n}\n\nfunction writeValue (value, pbf) {\n  var type = typeof value\n  if (type === 'string') {\n    pbf.writeStringField(1, value)\n  } else if (type === 'boolean') {\n    pbf.writeBooleanField(7, value)\n  } else if (type === 'number') {\n    if (value % 1 !== 0) {\n      pbf.writeDoubleField(3, value)\n    } else if (value < 0) {\n      pbf.writeSVarintField(6, value)\n    } else {\n      pbf.writeVarintField(5, value)\n    }\n  }\n}\n","// @flow\n\nimport { mat4 } from 'gl-matrix';\nimport EXTENT from '../data/extent';\nimport { PosArray } from '../data/array_types';\nimport { LineIndexArray } from '../data/index_array_type';\nimport posAttributes from '../data/pos_attributes';\nimport SegmentVector from '../data/segment';\nimport DepthMode from '../gl/depth_mode';\nimport StencilMode from '../gl/stencil_mode';\nimport CullFaceMode from '../gl/cull_face_mode';\nimport { debugUniformValues } from './program/debug_program';\nimport Color from '../style-spec/util/color';\n\nimport type Painter from './painter';\nimport type SourceCache from '../source/source_cache';\nimport type {OverscaledTileID} from '../source/tile_id';\n\nexport default drawDebug;\n\nfunction drawDebug(painter: Painter, sourceCache: SourceCache, coords: Array<OverscaledTileID>) {\n    for (let i = 0; i < coords.length; i++) {\n        drawDebugTile(painter, sourceCache, coords[i]);\n    }\n}\n\nfunction drawDebugTile(painter, sourceCache, coord) {\n    const context = painter.context;\n    const gl = context.gl;\n\n    const posMatrix = coord.posMatrix;\n    const program = painter.useProgram('debug');\n\n    const depthMode = DepthMode.disabled;\n    const stencilMode = StencilMode.disabled;\n    const colorMode = painter.colorModeForRenderPass();\n    const id = '$debug';\n\n    program.draw(context, gl.LINE_STRIP, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n        debugUniformValues(posMatrix, Color.red), id,\n        painter.debugBuffer, painter.tileBorderIndexBuffer, painter.debugSegments);\n\n    const vertices = createTextVertices(coord.toString(), 50, 200, 5);\n    const debugTextArray = new PosArray();\n    const debugTextIndices = new LineIndexArray();\n    for (let v = 0; v < vertices.length; v += 2) {\n        debugTextArray.emplaceBack(vertices[v], vertices[v + 1]);\n        debugTextIndices.emplaceBack(v, v + 1);\n    }\n    const debugTextBuffer = context.createVertexBuffer(debugTextArray, posAttributes.members);\n    const debugTextIndexBuffer = context.createIndexBuffer(debugTextIndices);\n    const debugTextSegment = SegmentVector.simpleSegment(0, 0, debugTextArray.length / 2, debugTextArray.length / 2);\n\n    // Draw the halo with multiple 1px lines instead of one wider line because\n    // the gl spec doesn't guarantee support for lines with width > 1.\n    const tileSize = sourceCache.getTile(coord).tileSize;\n    const onePixel = EXTENT / (Math.pow(2, painter.transform.zoom - coord.overscaledZ) * tileSize);\n    const translations = [[-1, -1], [-1, 1], [1, -1], [1, 1]];\n    for (let i = 0; i < translations.length; i++) {\n        const translation = translations[i];\n\n        program.draw(context, gl.LINES, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n            debugUniformValues(\n                mat4.translate([], posMatrix, [\n                    onePixel * translation[0],\n                    onePixel * translation[1], 0]),\n                Color.white),\n            id, debugTextBuffer, debugTextIndexBuffer, debugTextSegment);\n    }\n\n    program.draw(context, gl.LINES, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n        debugUniformValues(posMatrix, Color.black), id,\n        debugTextBuffer, debugTextIndexBuffer, debugTextSegment);\n}\n\n// Font data From Hershey Simplex Font\n// http://paulbourke.net/dataformats/hershey/\nconst simplexFont = {\n    \" \": [16, []],\n    \"!\": [10, [5, 21, 5, 7, -1, -1, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2]],\n    \"\\\"\": [16, [4, 21, 4, 14, -1, -1, 12, 21, 12, 14]],\n    \"#\": [21, [11, 25, 4, -7, -1, -1, 17, 25, 10, -7, -1, -1, 4, 12, 18, 12, -1, -1, 3, 6, 17, 6]],\n    \"$\": [20, [8, 25, 8, -4, -1, -1, 12, 25, 12, -4, -1, -1, 17, 18, 15, 20, 12, 21, 8, 21, 5, 20, 3, 18, 3, 16, 4, 14, 5, 13, 7, 12, 13, 10, 15, 9, 16, 8, 17, 6, 17, 3, 15, 1, 12, 0, 8, 0, 5, 1, 3, 3]],\n    \"%\": [24, [21, 21, 3, 0, -1, -1, 8, 21, 10, 19, 10, 17, 9, 15, 7, 14, 5, 14, 3, 16, 3, 18, 4, 20, 6, 21, 8, 21, 10, 20, 13, 19, 16, 19, 19, 20, 21, 21, -1, -1, 17, 7, 15, 6, 14, 4, 14, 2, 16, 0, 18, 0, 20, 1, 21, 3, 21, 5, 19, 7, 17, 7]],\n    \"&\": [26, [23, 12, 23, 13, 22, 14, 21, 14, 20, 13, 19, 11, 17, 6, 15, 3, 13, 1, 11, 0, 7, 0, 5, 1, 4, 2, 3, 4, 3, 6, 4, 8, 5, 9, 12, 13, 13, 14, 14, 16, 14, 18, 13, 20, 11, 21, 9, 20, 8, 18, 8, 16, 9, 13, 11, 10, 16, 3, 18, 1, 20, 0, 22, 0, 23, 1, 23, 2]],\n    \"'\": [10, [5, 19, 4, 20, 5, 21, 6, 20, 6, 18, 5, 16, 4, 15]],\n    \"(\": [14, [11, 25, 9, 23, 7, 20, 5, 16, 4, 11, 4, 7, 5, 2, 7, -2, 9, -5, 11, -7]],\n    \")\": [14, [3, 25, 5, 23, 7, 20, 9, 16, 10, 11, 10, 7, 9, 2, 7, -2, 5, -5, 3, -7]],\n    \"*\": [16, [8, 21, 8, 9, -1, -1, 3, 18, 13, 12, -1, -1, 13, 18, 3, 12]],\n    \"+\": [26, [13, 18, 13, 0, -1, -1, 4, 9, 22, 9]],\n    \",\": [10, [6, 1, 5, 0, 4, 1, 5, 2, 6, 1, 6, -1, 5, -3, 4, -4]],\n    \"-\": [26, [4, 9, 22, 9]],\n    \".\": [10, [5, 2, 4, 1, 5, 0, 6, 1, 5, 2]],\n    \"/\": [22, [20, 25, 2, -7]],\n    \"0\": [20, [9, 21, 6, 20, 4, 17, 3, 12, 3, 9, 4, 4, 6, 1, 9, 0, 11, 0, 14, 1, 16, 4, 17, 9, 17, 12, 16, 17, 14, 20, 11, 21, 9, 21]],\n    \"1\": [20, [6, 17, 8, 18, 11, 21, 11, 0]],\n    \"2\": [20, [4, 16, 4, 17, 5, 19, 6, 20, 8, 21, 12, 21, 14, 20, 15, 19, 16, 17, 16, 15, 15, 13, 13, 10, 3, 0, 17, 0]],\n    \"3\": [20, [5, 21, 16, 21, 10, 13, 13, 13, 15, 12, 16, 11, 17, 8, 17, 6, 16, 3, 14, 1, 11, 0, 8, 0, 5, 1, 4, 2, 3, 4]],\n    \"4\": [20, [13, 21, 3, 7, 18, 7, -1, -1, 13, 21, 13, 0]],\n    \"5\": [20, [15, 21, 5, 21, 4, 12, 5, 13, 8, 14, 11, 14, 14, 13, 16, 11, 17, 8, 17, 6, 16, 3, 14, 1, 11, 0, 8, 0, 5, 1, 4, 2, 3, 4]],\n    \"6\": [20, [16, 18, 15, 20, 12, 21, 10, 21, 7, 20, 5, 17, 4, 12, 4, 7, 5, 3, 7, 1, 10, 0, 11, 0, 14, 1, 16, 3, 17, 6, 17, 7, 16, 10, 14, 12, 11, 13, 10, 13, 7, 12, 5, 10, 4, 7]],\n    \"7\": [20, [17, 21, 7, 0, -1, -1, 3, 21, 17, 21]],\n    \"8\": [20, [8, 21, 5, 20, 4, 18, 4, 16, 5, 14, 7, 13, 11, 12, 14, 11, 16, 9, 17, 7, 17, 4, 16, 2, 15, 1, 12, 0, 8, 0, 5, 1, 4, 2, 3, 4, 3, 7, 4, 9, 6, 11, 9, 12, 13, 13, 15, 14, 16, 16, 16, 18, 15, 20, 12, 21, 8, 21]],\n    \"9\": [20, [16, 14, 15, 11, 13, 9, 10, 8, 9, 8, 6, 9, 4, 11, 3, 14, 3, 15, 4, 18, 6, 20, 9, 21, 10, 21, 13, 20, 15, 18, 16, 14, 16, 9, 15, 4, 13, 1, 10, 0, 8, 0, 5, 1, 4, 3]],\n    \":\": [10, [5, 14, 4, 13, 5, 12, 6, 13, 5, 14, -1, -1, 5, 2, 4, 1, 5, 0, 6, 1, 5, 2]],\n    \";\": [10, [5, 14, 4, 13, 5, 12, 6, 13, 5, 14, -1, -1, 6, 1, 5, 0, 4, 1, 5, 2, 6, 1, 6, -1, 5, -3, 4, -4]],\n    \"<\": [24, [20, 18, 4, 9, 20, 0]],\n    \"=\": [26, [4, 12, 22, 12, -1, -1, 4, 6, 22, 6]],\n    \">\": [24, [4, 18, 20, 9, 4, 0]],\n    \"?\": [18, [3, 16, 3, 17, 4, 19, 5, 20, 7, 21, 11, 21, 13, 20, 14, 19, 15, 17, 15, 15, 14, 13, 13, 12, 9, 10, 9, 7, -1, -1, 9, 2, 8, 1, 9, 0, 10, 1, 9, 2]],\n    \"@\": [27, [18, 13, 17, 15, 15, 16, 12, 16, 10, 15, 9, 14, 8, 11, 8, 8, 9, 6, 11, 5, 14, 5, 16, 6, 17, 8, -1, -1, 12, 16, 10, 14, 9, 11, 9, 8, 10, 6, 11, 5, -1, -1, 18, 16, 17, 8, 17, 6, 19, 5, 21, 5, 23, 7, 24, 10, 24, 12, 23, 15, 22, 17, 20, 19, 18, 20, 15, 21, 12, 21, 9, 20, 7, 19, 5, 17, 4, 15, 3, 12, 3, 9, 4, 6, 5, 4, 7, 2, 9, 1, 12, 0, 15, 0, 18, 1, 20, 2, 21, 3, -1, -1, 19, 16, 18, 8, 18, 6, 19, 5]],\n    \"A\": [18, [9, 21, 1, 0, -1, -1, 9, 21, 17, 0, -1, -1, 4, 7, 14, 7]],\n    \"B\": [21, [4, 21, 4, 0, -1, -1, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 15, 17, 13, 16, 12, 13, 11, -1, -1, 4, 11, 13, 11, 16, 10, 17, 9, 18, 7, 18, 4, 17, 2, 16, 1, 13, 0, 4, 0]],\n    \"C\": [21, [18, 16, 17, 18, 15, 20, 13, 21, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5]],\n    \"D\": [21, [4, 21, 4, 0, -1, -1, 4, 21, 11, 21, 14, 20, 16, 18, 17, 16, 18, 13, 18, 8, 17, 5, 16, 3, 14, 1, 11, 0, 4, 0]],\n    \"E\": [19, [4, 21, 4, 0, -1, -1, 4, 21, 17, 21, -1, -1, 4, 11, 12, 11, -1, -1, 4, 0, 17, 0]],\n    \"F\": [18, [4, 21, 4, 0, -1, -1, 4, 21, 17, 21, -1, -1, 4, 11, 12, 11]],\n    \"G\": [21, [18, 16, 17, 18, 15, 20, 13, 21, 9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 18, 8, -1, -1, 13, 8, 18, 8]],\n    \"H\": [22, [4, 21, 4, 0, -1, -1, 18, 21, 18, 0, -1, -1, 4, 11, 18, 11]],\n    \"I\": [8, [4, 21, 4, 0]],\n    \"J\": [16, [12, 21, 12, 5, 11, 2, 10, 1, 8, 0, 6, 0, 4, 1, 3, 2, 2, 5, 2, 7]],\n    \"K\": [21, [4, 21, 4, 0, -1, -1, 18, 21, 4, 7, -1, -1, 9, 12, 18, 0]],\n    \"L\": [17, [4, 21, 4, 0, -1, -1, 4, 0, 16, 0]],\n    \"M\": [24, [4, 21, 4, 0, -1, -1, 4, 21, 12, 0, -1, -1, 20, 21, 12, 0, -1, -1, 20, 21, 20, 0]],\n    \"N\": [22, [4, 21, 4, 0, -1, -1, 4, 21, 18, 0, -1, -1, 18, 21, 18, 0]],\n    \"O\": [22, [9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 19, 8, 19, 13, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21]],\n    \"P\": [21, [4, 21, 4, 0, -1, -1, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 14, 17, 12, 16, 11, 13, 10, 4, 10]],\n    \"Q\": [22, [9, 21, 7, 20, 5, 18, 4, 16, 3, 13, 3, 8, 4, 5, 5, 3, 7, 1, 9, 0, 13, 0, 15, 1, 17, 3, 18, 5, 19, 8, 19, 13, 18, 16, 17, 18, 15, 20, 13, 21, 9, 21, -1, -1, 12, 4, 18, -2]],\n    \"R\": [21, [4, 21, 4, 0, -1, -1, 4, 21, 13, 21, 16, 20, 17, 19, 18, 17, 18, 15, 17, 13, 16, 12, 13, 11, 4, 11, -1, -1, 11, 11, 18, 0]],\n    \"S\": [20, [17, 18, 15, 20, 12, 21, 8, 21, 5, 20, 3, 18, 3, 16, 4, 14, 5, 13, 7, 12, 13, 10, 15, 9, 16, 8, 17, 6, 17, 3, 15, 1, 12, 0, 8, 0, 5, 1, 3, 3]],\n    \"T\": [16, [8, 21, 8, 0, -1, -1, 1, 21, 15, 21]],\n    \"U\": [22, [4, 21, 4, 6, 5, 3, 7, 1, 10, 0, 12, 0, 15, 1, 17, 3, 18, 6, 18, 21]],\n    \"V\": [18, [1, 21, 9, 0, -1, -1, 17, 21, 9, 0]],\n    \"W\": [24, [2, 21, 7, 0, -1, -1, 12, 21, 7, 0, -1, -1, 12, 21, 17, 0, -1, -1, 22, 21, 17, 0]],\n    \"X\": [20, [3, 21, 17, 0, -1, -1, 17, 21, 3, 0]],\n    \"Y\": [18, [1, 21, 9, 11, 9, 0, -1, -1, 17, 21, 9, 11]],\n    \"Z\": [20, [17, 21, 3, 0, -1, -1, 3, 21, 17, 21, -1, -1, 3, 0, 17, 0]],\n    \"[\": [14, [4, 25, 4, -7, -1, -1, 5, 25, 5, -7, -1, -1, 4, 25, 11, 25, -1, -1, 4, -7, 11, -7]],\n    \"\\\\\": [14, [0, 21, 14, -3]],\n    \"]\": [14, [9, 25, 9, -7, -1, -1, 10, 25, 10, -7, -1, -1, 3, 25, 10, 25, -1, -1, 3, -7, 10, -7]],\n    \"^\": [16, [6, 15, 8, 18, 10, 15, -1, -1, 3, 12, 8, 17, 13, 12, -1, -1, 8, 17, 8, 0]],\n    \"_\": [16, [0, -2, 16, -2]],\n    \"`\": [10, [6, 21, 5, 20, 4, 18, 4, 16, 5, 15, 6, 16, 5, 17]],\n    \"a\": [19, [15, 14, 15, 0, -1, -1, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"b\": [19, [4, 21, 4, 0, -1, -1, 4, 11, 6, 13, 8, 14, 11, 14, 13, 13, 15, 11, 16, 8, 16, 6, 15, 3, 13, 1, 11, 0, 8, 0, 6, 1, 4, 3]],\n    \"c\": [18, [15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"d\": [19, [15, 21, 15, 0, -1, -1, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"e\": [18, [3, 8, 15, 8, 15, 10, 14, 12, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"f\": [12, [10, 21, 8, 21, 6, 20, 5, 17, 5, 0, -1, -1, 2, 14, 9, 14]],\n    \"g\": [19, [15, 14, 15, -2, 14, -5, 13, -6, 11, -7, 8, -7, 6, -6, -1, -1, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"h\": [19, [4, 21, 4, 0, -1, -1, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0]],\n    \"i\": [8, [3, 21, 4, 20, 5, 21, 4, 22, 3, 21, -1, -1, 4, 14, 4, 0]],\n    \"j\": [10, [5, 21, 6, 20, 7, 21, 6, 22, 5, 21, -1, -1, 6, 14, 6, -3, 5, -6, 3, -7, 1, -7]],\n    \"k\": [17, [4, 21, 4, 0, -1, -1, 14, 14, 4, 4, -1, -1, 8, 8, 15, 0]],\n    \"l\": [8, [4, 21, 4, 0]],\n    \"m\": [30, [4, 14, 4, 0, -1, -1, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0, -1, -1, 15, 10, 18, 13, 20, 14, 23, 14, 25, 13, 26, 10, 26, 0]],\n    \"n\": [19, [4, 14, 4, 0, -1, -1, 4, 10, 7, 13, 9, 14, 12, 14, 14, 13, 15, 10, 15, 0]],\n    \"o\": [19, [8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3, 16, 6, 16, 8, 15, 11, 13, 13, 11, 14, 8, 14]],\n    \"p\": [19, [4, 14, 4, -7, -1, -1, 4, 11, 6, 13, 8, 14, 11, 14, 13, 13, 15, 11, 16, 8, 16, 6, 15, 3, 13, 1, 11, 0, 8, 0, 6, 1, 4, 3]],\n    \"q\": [19, [15, 14, 15, -7, -1, -1, 15, 11, 13, 13, 11, 14, 8, 14, 6, 13, 4, 11, 3, 8, 3, 6, 4, 3, 6, 1, 8, 0, 11, 0, 13, 1, 15, 3]],\n    \"r\": [13, [4, 14, 4, 0, -1, -1, 4, 8, 5, 11, 7, 13, 9, 14, 12, 14]],\n    \"s\": [17, [14, 11, 13, 13, 10, 14, 7, 14, 4, 13, 3, 11, 4, 9, 6, 8, 11, 7, 13, 6, 14, 4, 14, 3, 13, 1, 10, 0, 7, 0, 4, 1, 3, 3]],\n    \"t\": [12, [5, 21, 5, 4, 6, 1, 8, 0, 10, 0, -1, -1, 2, 14, 9, 14]],\n    \"u\": [19, [4, 14, 4, 4, 5, 1, 7, 0, 10, 0, 12, 1, 15, 4, -1, -1, 15, 14, 15, 0]],\n    \"v\": [16, [2, 14, 8, 0, -1, -1, 14, 14, 8, 0]],\n    \"w\": [22, [3, 14, 7, 0, -1, -1, 11, 14, 7, 0, -1, -1, 11, 14, 15, 0, -1, -1, 19, 14, 15, 0]],\n    \"x\": [17, [3, 14, 14, 0, -1, -1, 14, 14, 3, 0]],\n    \"y\": [16, [2, 14, 8, 0, -1, -1, 14, 14, 8, 0, 6, -4, 4, -6, 2, -7, 1, -7]],\n    \"z\": [17, [14, 14, 3, 0, -1, -1, 3, 14, 14, 14, -1, -1, 3, 0, 14, 0]],\n    \"{\": [14, [9, 25, 7, 24, 6, 23, 5, 21, 5, 19, 6, 17, 7, 16, 8, 14, 8, 12, 6, 10, -1, -1, 7, 24, 6, 22, 6, 20, 7, 18, 8, 17, 9, 15, 9, 13, 8, 11, 4, 9, 8, 7, 9, 5, 9, 3, 8, 1, 7, 0, 6, -2, 6, -4, 7, -6, -1, -1, 6, 8, 8, 6, 8, 4, 7, 2, 6, 1, 5, -1, 5, -3, 6, -5, 7, -6, 9, -7]],\n    \"|\": [8, [4, 25, 4, -7]],\n    \"}\": [14, [5, 25, 7, 24, 8, 23, 9, 21, 9, 19, 8, 17, 7, 16, 6, 14, 6, 12, 8, 10, -1, -1, 7, 24, 8, 22, 8, 20, 7, 18, 6, 17, 5, 15, 5, 13, 6, 11, 10, 9, 6, 7, 5, 5, 5, 3, 6, 1, 7, 0, 8, -2, 8, -4, 7, -6, -1, -1, 8, 8, 6, 6, 6, 4, 7, 2, 8, 1, 9, -1, 9, -3, 8, -5, 7, -6, 5, -7]],\n    \"~\": [24, [3, 6, 3, 8, 4, 11, 6, 12, 8, 12, 10, 11, 14, 8, 16, 7, 18, 7, 20, 8, 21, 10, -1, -1, 3, 8, 4, 10, 6, 11, 8, 11, 10, 10, 14, 7, 16, 6, 18, 6, 20, 7, 21, 10, 21, 12]]\n};\n\nfunction createTextVertices(text, left, baseline, scale) {\n    scale = scale || 1;\n\n    const strokes = [];\n    let i, len, j, len2, glyph, x, y, prev;\n\n    for (i = 0, len = text.length; i < len; i++) {\n        glyph = simplexFont[text[i]];\n        if (!glyph) continue;\n        prev = null;\n\n        for (j = 0, len2 = glyph[1].length; j < len2; j += 2) {\n            if (glyph[1][j] === -1 && glyph[1][j + 1] === -1) {\n                prev = null;\n\n            } else {\n                x = left + glyph[1][j] * scale;\n                y = baseline - glyph[1][j + 1] * scale;\n                if (prev) {\n                    strokes.push(prev.x, prev.y, x, y);\n                }\n                prev = {x, y};\n            }\n        }\n        left += glyph[0] * scale;\n    }\n\n    return strokes;\n}\n","// @flow\n\nimport drawCollisionDebug from './draw_collision_debug';\n\nimport SegmentVector from '../data/segment';\nimport pixelsToTileUnits from '../source/pixels_to_tile_units';\nimport * as symbolProjection from '../symbol/projection';\nimport * as symbolSize from '../symbol/symbol_size';\nimport { mat4 } from 'gl-matrix';\nconst identityMat4 = mat4.identity(new Float32Array(16));\nimport properties from '../style/style_layer/symbol_style_layer_properties';\nconst symbolLayoutProperties = properties.layout;\nimport StencilMode from '../gl/stencil_mode';\nimport DepthMode from '../gl/depth_mode';\nimport CullFaceMode from '../gl/cull_face_mode';\nimport {\n    symbolIconUniformValues,\n    symbolSDFUniformValues\n} from './program/symbol_program';\n\nimport type Painter from './painter';\nimport type SourceCache from '../source/source_cache';\nimport type SymbolStyleLayer from '../style/style_layer/symbol_style_layer';\nimport type SymbolBucket, {SymbolBuffers} from '../data/bucket/symbol_bucket';\nimport type Texture from '../render/texture';\nimport type {OverscaledTileID} from '../source/tile_id';\nimport type {UniformValues} from './uniform_binding';\nimport type {SymbolSDFUniformsType} from '../render/program/symbol_program';\n\nexport default drawSymbols;\n\ntype SymbolTileRenderState = {\n    segments: SegmentVector,\n    sortKey: number,\n    state: {\n        program: any,\n        buffers: SymbolBuffers,\n        uniformValues: any,\n        atlasTexture: Texture,\n        atlasInterpolation: any,\n        isSDF: boolean,\n        hasHalo: boolean\n    }\n};\n\nfunction drawSymbols(painter: Painter, sourceCache: SourceCache, layer: SymbolStyleLayer, coords: Array<OverscaledTileID>) {\n    if (painter.renderPass !== 'translucent') return;\n\n    // Disable the stencil test so that labels aren't clipped to tile boundaries.\n    const stencilMode = StencilMode.disabled;\n    const colorMode = painter.colorModeForRenderPass();\n\n    if (layer.paint.get('icon-opacity').constantOr(1) !== 0) {\n        drawLayerSymbols(painter, sourceCache, layer, coords, false,\n            layer.paint.get('icon-translate'),\n            layer.paint.get('icon-translate-anchor'),\n            layer.layout.get('icon-rotation-alignment'),\n            layer.layout.get('icon-pitch-alignment'),\n            layer.layout.get('icon-keep-upright'),\n            stencilMode, colorMode\n        );\n    }\n\n    if (layer.paint.get('text-opacity').constantOr(1) !== 0) {\n        drawLayerSymbols(painter, sourceCache, layer, coords, true,\n            layer.paint.get('text-translate'),\n            layer.paint.get('text-translate-anchor'),\n            layer.layout.get('text-rotation-alignment'),\n            layer.layout.get('text-pitch-alignment'),\n            layer.layout.get('text-keep-upright'),\n            stencilMode, colorMode\n        );\n    }\n\n    if (sourceCache.map.showCollisionBoxes) {\n        drawCollisionDebug(painter, sourceCache, layer, coords);\n    }\n}\n\nfunction drawLayerSymbols(painter, sourceCache, layer, coords, isText, translate, translateAnchor,\n    rotationAlignment, pitchAlignment, keepUpright, stencilMode, colorMode) {\n\n    const context = painter.context;\n    const gl = context.gl;\n    const tr = painter.transform;\n\n    const rotateWithMap = rotationAlignment === 'map';\n    const pitchWithMap = pitchAlignment === 'map';\n    const alongLine = rotateWithMap && layer.layout.get('symbol-placement') !== 'point';\n    // Line label rotation happens in `updateLineLabels`\n    // Pitched point labels are automatically rotated by the labelPlaneMatrix projection\n    // Unpitched point labels need to have their rotation applied after projection\n    const rotateInShader = rotateWithMap && !pitchWithMap && !alongLine;\n\n    const sortFeaturesByKey = layer.layout.get('symbol-sort-key').constantOr(1) !== undefined;\n\n    const depthMode = painter.depthModeForSublayer(0, DepthMode.ReadOnly);\n\n    let program;\n    let size;\n\n    const tileRenderState: Array<SymbolTileRenderState> = [];\n\n    for (const coord of coords) {\n        const tile = sourceCache.getTile(coord);\n        const bucket: SymbolBucket = (tile.getBucket(layer): any);\n        if (!bucket) continue;\n        const buffers = isText ? bucket.text : bucket.icon;\n        if (!buffers || !buffers.segments.get().length) continue;\n        const programConfiguration = buffers.programConfigurations.get(layer.id);\n\n        const isSDF = isText || bucket.sdfIcons;\n\n        const sizeData = isText ? bucket.textSizeData : bucket.iconSizeData;\n\n        if (!program) {\n            program = painter.useProgram(isSDF ? 'symbolSDF' : 'symbolIcon', programConfiguration);\n            size = symbolSize.evaluateSizeForZoom(sizeData, tr.zoom, symbolLayoutProperties.properties[isText ? 'text-size' : 'icon-size']);\n        }\n\n        context.activeTexture.set(gl.TEXTURE0);\n\n        let texSize: [number, number];\n        let atlasTexture;\n        let atlasInterpolation;\n        if (isText) {\n            atlasTexture = tile.glyphAtlasTexture;\n            atlasInterpolation = gl.LINEAR;\n            texSize = tile.glyphAtlasTexture.size;\n\n        } else {\n            const iconScaled = layer.layout.get('icon-size').constantOr(0) !== 1 || bucket.iconsNeedLinear;\n            const iconTransformed = pitchWithMap || tr.pitch !== 0;\n\n            atlasTexture = tile.imageAtlasTexture;\n            atlasInterpolation = isSDF || painter.options.rotating || painter.options.zooming || iconScaled || iconTransformed ?\n                gl.LINEAR :\n                gl.NEAREST;\n            texSize = tile.imageAtlasTexture.size;\n        }\n\n        const s = pixelsToTileUnits(tile, 1, painter.transform.zoom);\n        const labelPlaneMatrix = symbolProjection.getLabelPlaneMatrix(coord.posMatrix, pitchWithMap, rotateWithMap, painter.transform, s);\n        const glCoordMatrix = symbolProjection.getGlCoordMatrix(coord.posMatrix, pitchWithMap, rotateWithMap, painter.transform, s);\n\n        if (alongLine) {\n            symbolProjection.updateLineLabels(bucket, coord.posMatrix, painter, isText, labelPlaneMatrix, glCoordMatrix, pitchWithMap, keepUpright);\n        }\n\n        const matrix = painter.translatePosMatrix(coord.posMatrix, tile, translate, translateAnchor),\n            uLabelPlaneMatrix = alongLine ? identityMat4 : labelPlaneMatrix,\n            uglCoordMatrix = painter.translatePosMatrix(glCoordMatrix, tile, translate, translateAnchor, true);\n\n        const hasHalo = isSDF && layer.paint.get(isText ? 'text-halo-width' : 'icon-halo-width').constantOr(1) !== 0;\n\n        let uniformValues;\n        if (isSDF) {\n            uniformValues = symbolSDFUniformValues(sizeData.functionType,\n                size, rotateInShader, pitchWithMap, painter, matrix,\n                uLabelPlaneMatrix, uglCoordMatrix, isText, texSize, true);\n\n        } else {\n            uniformValues = symbolIconUniformValues(sizeData.functionType,\n                size, rotateInShader, pitchWithMap, painter, matrix,\n                uLabelPlaneMatrix, uglCoordMatrix, isText, texSize);\n        }\n\n        const state = {\n            program,\n            buffers,\n            uniformValues,\n            atlasTexture,\n            atlasInterpolation,\n            isSDF,\n            hasHalo\n        };\n\n        if (sortFeaturesByKey) {\n            const oldSegments = buffers.segments.get();\n            for (const segment of oldSegments) {\n                tileRenderState.push({\n                    segments: new SegmentVector([segment]),\n                    sortKey: ((segment.sortKey: any): number),\n                    state\n                });\n            }\n        } else {\n            tileRenderState.push({\n                segments: buffers.segments,\n                sortKey: 0,\n                state\n            });\n        }\n    }\n\n    if (sortFeaturesByKey) {\n        tileRenderState.sort((a, b) => a.sortKey - b.sortKey);\n    }\n\n    for (const segmentState of tileRenderState) {\n        const state = segmentState.state;\n\n        state.atlasTexture.bind(state.atlasInterpolation, gl.CLAMP_TO_EDGE);\n\n        if (state.isSDF) {\n            const uniformValues = ((state.uniformValues: any): UniformValues<SymbolSDFUniformsType>);\n            if (state.hasHalo) {\n                uniformValues['u_is_halo'] = 1;\n                drawSymbolElements(state.buffers, segmentState.segments, layer, painter, state.program, depthMode, stencilMode, colorMode, uniformValues);\n            }\n            uniformValues['u_is_halo'] = 0;\n        }\n        drawSymbolElements(state.buffers, segmentState.segments, layer, painter, state.program, depthMode, stencilMode, colorMode, state.uniformValues);\n    }\n}\n\nfunction drawSymbolElements(buffers, segments, layer, painter, program, depthMode, stencilMode, colorMode, uniformValues) {\n    const context = painter.context;\n    const gl = context.gl;\n    program.draw(context, gl.TRIANGLES, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n        uniformValues, layer.id, buffers.layoutVertexBuffer,\n        buffers.indexBuffer, segments, layer.paint,\n        painter.transform.zoom, buffers.programConfigurations.get(layer.id),\n        buffers.dynamicLayoutVertexBuffer, buffers.opacityVertexBuffer);\n}\n\n","// @flow\n\nimport type Painter from './painter';\nimport type SourceCache from '../source/source_cache';\nimport type StyleLayer from '../style/style_layer';\nimport type {OverscaledTileID} from '../source/tile_id';\nimport type SymbolBucket from '../data/bucket/symbol_bucket';\nimport DepthMode from '../gl/depth_mode';\nimport StencilMode from '../gl/stencil_mode';\nimport CullFaceMode from '../gl/cull_face_mode';\nimport { collisionUniformValues } from './program/collision_program';\n\nexport default drawCollisionDebug;\n\nfunction drawCollisionDebugGeometry(painter: Painter, sourceCache: SourceCache, layer: StyleLayer, coords: Array<OverscaledTileID>, drawCircles: boolean) {\n    const context = painter.context;\n    const gl = context.gl;\n    const program = drawCircles ? painter.useProgram('collisionCircle') : painter.useProgram('collisionBox');\n\n    for (let i = 0; i < coords.length; i++) {\n        const coord = coords[i];\n        const tile = sourceCache.getTile(coord);\n        const bucket: ?SymbolBucket = (tile.getBucket(layer): any);\n        if (!bucket) continue;\n        const buffers = drawCircles ? bucket.collisionCircle : bucket.collisionBox;\n        if (!buffers) continue;\n\n        program.draw(context, drawCircles ? gl.TRIANGLES : gl.LINES,\n            DepthMode.disabled, StencilMode.disabled,\n            painter.colorModeForRenderPass(),\n            CullFaceMode.disabled,\n            collisionUniformValues(\n                coord.posMatrix,\n                painter.transform,\n                tile),\n            layer.id, buffers.layoutVertexBuffer, buffers.indexBuffer,\n            buffers.segments, null, painter.transform.zoom, null, null,\n            buffers.collisionVertexBuffer);\n    }\n}\n\nfunction drawCollisionDebug(painter: Painter, sourceCache: SourceCache, layer: StyleLayer, coords: Array<OverscaledTileID>) {\n    drawCollisionDebugGeometry(painter, sourceCache, layer, coords, false);\n    drawCollisionDebugGeometry(painter, sourceCache, layer, coords, true);\n}\n","// @flow\n\nimport StencilMode from '../gl/stencil_mode';\nimport DepthMode from '../gl/depth_mode';\nimport CullFaceMode from '../gl/cull_face_mode';\nimport { circleUniformValues } from './program/circle_program';\n\nimport type Painter from './painter';\nimport type SourceCache from '../source/source_cache';\nimport type CircleStyleLayer from '../style/style_layer/circle_style_layer';\nimport type CircleBucket from '../data/bucket/circle_bucket';\nimport type {OverscaledTileID} from '../source/tile_id';\n\nexport default drawCircles;\n\nfunction drawCircles(painter: Painter, sourceCache: SourceCache, layer: CircleStyleLayer, coords: Array<OverscaledTileID>) {\n    if (painter.renderPass !== 'translucent') return;\n\n    const opacity = layer.paint.get('circle-opacity');\n    const strokeWidth = layer.paint.get('circle-stroke-width');\n    const strokeOpacity = layer.paint.get('circle-stroke-opacity');\n\n    if (opacity.constantOr(1) === 0 && (strokeWidth.constantOr(1) === 0 || strokeOpacity.constantOr(1) === 0)) {\n        return;\n    }\n\n    const context = painter.context;\n    const gl = context.gl;\n\n    const depthMode = painter.depthModeForSublayer(0, DepthMode.ReadOnly);\n    // Turn off stencil testing to allow circles to be drawn across boundaries,\n    // so that large circles are not clipped to tiles\n    const stencilMode = StencilMode.disabled;\n    const colorMode = painter.colorModeForRenderPass();\n\n    for (let i = 0; i < coords.length; i++) {\n        const coord = coords[i];\n\n        const tile = sourceCache.getTile(coord);\n        const bucket: ?CircleBucket<*> = (tile.getBucket(layer): any);\n        if (!bucket) continue;\n\n        const programConfiguration = bucket.programConfigurations.get(layer.id);\n        const program = painter.useProgram('circle', programConfiguration);\n\n        program.draw(context, gl.TRIANGLES, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n            circleUniformValues(painter, coord, tile, layer), layer.id,\n            bucket.layoutVertexBuffer, bucket.indexBuffer, bucket.segments,\n            layer.paint, painter.transform.zoom, programConfiguration);\n    }\n}\n","// @flow\n\nimport Texture from './texture';\nimport Color from '../style-spec/util/color';\nimport DepthMode from '../gl/depth_mode';\nimport StencilMode from '../gl/stencil_mode';\nimport ColorMode from '../gl/color_mode';\nimport CullFaceMode from '../gl/cull_face_mode';\nimport {\n    heatmapUniformValues,\n    heatmapTextureUniformValues\n} from './program/heatmap_program';\n\nimport type Painter from './painter';\nimport type SourceCache from '../source/source_cache';\nimport type HeatmapStyleLayer from '../style/style_layer/heatmap_style_layer';\nimport type HeatmapBucket from '../data/bucket/heatmap_bucket';\nimport type {OverscaledTileID} from '../source/tile_id';\n\nexport default drawHeatmap;\n\nfunction drawHeatmap(painter: Painter, sourceCache: SourceCache, layer: HeatmapStyleLayer, coords: Array<OverscaledTileID>) {\n    if (layer.paint.get('heatmap-opacity') === 0) {\n        return;\n    }\n\n    if (painter.renderPass === 'offscreen') {\n        const context = painter.context;\n        const gl = context.gl;\n\n        const depthMode = painter.depthModeForSublayer(0, DepthMode.ReadOnly);\n        // Allow kernels to be drawn across boundaries, so that\n        // large kernels are not clipped to tiles\n        const stencilMode = StencilMode.disabled;\n        // Turn on additive blending for kernels, which is a key aspect of kernel density estimation formula\n        const colorMode = new ColorMode([gl.ONE, gl.ONE], Color.transparent, [true, true, true, true]);\n\n        bindFramebuffer(context, painter, layer);\n\n        context.clear({ color: Color.transparent });\n\n        for (let i = 0; i < coords.length; i++) {\n            const coord = coords[i];\n\n            // Skip tiles that have uncovered parents to avoid flickering; we don't need\n            // to use complex tile masking here because the change between zoom levels is subtle,\n            // so it's fine to simply render the parent until all its 4 children are loaded\n            if (sourceCache.hasRenderableParent(coord)) continue;\n\n            const tile = sourceCache.getTile(coord);\n            const bucket: ?HeatmapBucket = (tile.getBucket(layer): any);\n            if (!bucket) continue;\n\n            const programConfiguration = bucket.programConfigurations.get(layer.id);\n            const program = painter.useProgram('heatmap', programConfiguration);\n            const {zoom} = painter.transform;\n\n            program.draw(context, gl.TRIANGLES, depthMode, stencilMode, colorMode, CullFaceMode.disabled,\n                heatmapUniformValues(coord.posMatrix,\n                    tile, zoom, layer.paint.get('heatmap-intensity')),\n                layer.id, bucket.layoutVertexBuffer, bucket.indexBuffer,\n                bucket.segments, layer.paint, painter.transform.zoom,\n                programConfiguration);\n        }\n\n        context.viewport.set([0, 0, painter.width, painter.height]);\n\n    } else if (painter.renderPass === 'translucent') {\n        painter.context.setColorMode(painter.colorModeForRenderPass());\n        renderTextureToMap(painter, layer);\n    }\n}\n\nfunction bindFramebuffer(context, painter, layer) {\n    const gl = context.gl;\n    context.activeTexture.set(gl.TEXTURE1);\n\n    // Use a 4x downscaled screen texture for better performance\n    context.viewport.set([0, 0, painter.width / 4, painter.height / 4]);\n\n    let fbo = layer.heatmapFbo;\n\n    if (!fbo) {\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n        fbo = layer.heatmapFbo = context.createFramebuffer(painter.width / 4, painter.height / 4);\n\n        bindTextureToFramebuffer(context, painter, texture, fbo);\n\n    } else {\n        gl.bindTexture(gl.TEXTURE_2D, fbo.colorAttachment.get());\n        context.bindFramebuffer.set(fbo.framebuffer);\n    }\n}\n\nfunction bindTextureToFramebuffer(context, painter, texture, fbo) {\n    const gl = context.gl;\n    // Use the higher precision half-float texture where available (producing much smoother looking heatmaps);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, painter.width / 4, painter.height / 4, 0, gl.RGBA,\n        context.extTextureHalfFloat ? context.extTextureHalfFloat.HALF_FLOAT_OES : gl.UNSIGNED_BYTE, null);\n\n    fbo.colorAttachment.set(texture);\n\n    // If using half-float texture as a render target is not supported, fall back to a low precision texture\n    if (context.extTextureHalfFloat && gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\n        context.extTextureHalfFloat = null;\n        fbo.colorAttachment.setDirty();\n        bindTextureToFramebuffer(context, painter, texture, fbo);\n    }\n}\n\nfunction renderTextureToMap(painter, layer) {\n    const context = painter.context;\n    const gl = context.gl;\n\n    // Here we bind two different textures from which we'll sample in drawing\n    // heatmaps: the kernel texture, prepared in the offscreen pass, and a\n    // color ramp texture.\n    const fbo = layer.heatmapFbo;\n    if (!fbo) return;\n    context.activeTexture.set(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, fbo.colorAttachment.get());\n\n    context.activeTexture.set(gl.TEXTURE1);\n    let colorRampTexture = layer.colorRampTexture;\n    if (!colorRampTexture) {\n        colorRampTexture = layer.colorRampTexture = new Texture(context, layer.colorRamp, gl.RGBA);\n    }\n    colorRampTexture.bind(gl.LINEAR, gl.CLAMP_TO_EDGE);\n\n    painter.useProgram('heatmapTexture').draw(context, gl.TRIANGLES,\n        DepthMode.disabled, StencilMode.disabled, painter.colorModeForRenderPass(), CullFaceMode.disabled,\n        heatmapTextureUniformValues(painter, layer, 0, 1),\n        layer.id, painter.viewportBuffer, painter.quadTriangleIndexBuffer,\n        painter.viewportSegments, layer.paint, painter.transform.zoom);\n}\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n  var dict;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      // Convert data if needed\n      if (typeof dictionary === 'string') {\n        dict = strings.string2buf(dictionary);\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\n        dict = new Uint8Array(dictionary);\n      } else {\n        dict = dictionary;\n      }\n\n      status = zlib_inflate.inflateSetDictionary(this.strm, dict);\n\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import VectorTileSource from 'mapbox-gl/src/source/vector_tile_source'\nimport pako from 'pako/lib/inflate'\nimport base64js from 'base64-js'\nimport Database from './database'\n\nclass MBTilesSource extends VectorTileSource {\n\n    constructor(id, options, dispatcher, eventedParent) {\n        super(id, options, dispatcher, eventedParent);\n        this.type = \"mbtiles\";\n        this.db = this.openDatabase(options.path);\n    }\n\n    openDatabase(dbLocation) {\n        return Database.openDatabase(dbLocation)\n    }\n\n    copyDatabaseFile(dbLocation, dbName, targetDir) {\n        return Database.copyDatabaseFile(dbLocation, dbName, targetDir)\n    }\n\n    readTile(z, x, y, callback) {\n        const query = 'SELECT BASE64(tile_data) AS base64_tile_data FROM tiles WHERE zoom_level=? AND tile_column=? AND tile_row=?';\n        const params = [z, x, y];\n        this.db.then(function(db) {\n            db.transaction(function (txn) {\n                txn.executeSql(query, params, function (tx, res) {\n                    if (res.rows.length) {\n                        const base64Data = res.rows.item(0).base64_tile_data;\n                        const rawData = pako.inflate(base64js.toByteArray(base64Data));\n                        callback(undefined, base64js.fromByteArray(rawData)); // Tile contents read, callback success.\n                    } else {\n                        callback(new Error('tile ' + params.join(',') + ' not found'));\n                    }\n                });\n            }, function (error) {\n                callback(error); // Error executing SQL\n            });\n        }).catch(function(err) {\n            callback(err);\n        });\n    }\n\n    loadTile(tile, callback) {\n        const coord = tile.tileID.canonical;\n        const overscaling = coord.z > this.maxzoom ? Math.pow(2, coord.z - this.maxzoom) : 1;\n\n        const z = Math.min(coord.z, this.maxzoom || coord.z); // Don't try to get data over maxzoom\n        const x = coord.x;\n        const y = Math.pow(2,z)-coord.y-1; // Tiles on database are tms (inverted y axis)\n\n        this.readTile(z, x, y, dispatch.bind(this));\n\n        function dispatch(err, base64Data) {\n            if (err) {\n                return callback(err);\n            }\n            if (base64Data === undefined) {\n              return callback(new Error(\"empty data\"));\n            }\n\n            const params = {\n                request: { url: \"data:application/x-protobuf;base64,\" + base64Data },\n                uid: tile.uid,\n                tileID: tile.tileID,\n                zoom: coord.z,\n                tileSize: this.tileSize * overscaling,\n                type: this.type,\n                source: this.id,\n                pixelRatio: window.devicePixelRatio || 1,\n                overscaling: overscaling,\n                showCollisionBoxes: this.map.showCollisionBoxes\n            };\n\n            if (!tile.workerID || tile.state === 'expired') {\n                tile.workerID = this.dispatcher.send('loadTile', params, done.bind(this));\n            } else if (tile.state === 'loading') {\n                // schedule tile reloading after it has been loaded\n                tile.reloadCallback = callback;\n            } else {\n                this.dispatcher.send('reloadTile', params, done.bind(this), tile.workerID);\n            }\n\n            function done(err, data) {\n                if (tile.aborted)\n                    return;\n\n                if (err) {\n                    return callback(err);\n                }\n\n                if (this.map._refreshExpiredTiles) tile.setExpiryData(data);\n                tile.loadVectorData(data, this.map.painter);\n\n                callback(null);\n\n                if (tile.reloadCallback) {\n                    this.loadTile(tile, tile.reloadCallback);\n                    tile.reloadCallback = null;\n                }\n            }\n        }\n    }\n}\n\nexport default MBTilesSource;\n","// @flow\n\n'use strict';\n\nimport MBTilesSource from './mbtiles_source'\nimport RasterTileSourceOffline from \"./raster_tile_offline_source\"\nimport Map from 'mapbox-gl/src/ui/map'\nimport {extend} from 'mapbox-gl/src/util/util'\nimport window from 'mapbox-gl/src/util/window'\n\nconst readJSON = (url) => new Promise((resolve, reject) => {\n    const xhr = new window.XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.setRequestHeader('Accept', 'application/json');\n    xhr.onerror = (e) => reject(e);\n    xhr.onload = () => {\n        const isFile = xhr.responseURL.indexOf('file://') === 0;\n        if (((xhr.status >= 200 && xhr.status < 300) || isFile) && xhr.response) {\n            try {\n                resolve(JSON.parse(xhr.response));\n            } catch (err) {\n                reject(err);\n            }\n        } else {\n            reject(new Error(xhr.statusText, xhr.status));\n        }\n    };\n    xhr.send();\n    return xhr;\n});\n\nconst dereferenceStyle = (options) => {\n    if (typeof options.style === 'string' || options.style instanceof String) {\n        return readJSON(options.style).then((style) => extend({}, options, {style: style}));\n    } else {\n        return Promise.resolve(options);\n    }\n};\n\nconst absoluteSpriteUrl = (options) => {\n    const style = options.style;\n    const hasProtocol = /^.+:\\/\\//;\n    const path = window.location.origin + window.location.pathname.split('/').slice(0, -1).join('/');\n\n    if (('sprite' in style) && !style.sprite.match(hasProtocol) &&\n        ('glyphs' in style) && !style.glyphs.match(hasProtocol)) {\n        style.sprite = path + '/' +  style.sprite; // eslint-disable-line prefer-template\n        style.glyphs = path + '/' +  style.glyphs; // eslint-disable-line prefer-template\n    }\n    return options;\n};\n\nconst createEmptyMap = (options) => new Promise((resolve) => {\n    const emptyMapStyle = extend({}, options.style, {\n        sources: {},\n        layers: []\n    });\n    const emptyMapOptions = extend({}, options, {style: emptyMapStyle});\n    const map = new Map(emptyMapOptions);\n    map.once('load', () => {\n        let mbTilesSourceLoaded = new Promise((resolve) => {\n            map.addSourceType('mbtiles', MBTilesSource, () => resolve())\n        })\n        let rasterOfflineSourceLoaded = new Promise((resolve) => {\n            map.addSourceType('rasteroffline', RasterTileSourceOffline, () => resolve())\n        })\n\n        Promise.all([mbTilesSourceLoaded, rasterOfflineSourceLoaded]).then(() => resolve(map))\n    });\n});\n\nconst loadSources = (style) => (map) => {\n    Object.keys(style.sources).map((sourceName) => map.addSource(sourceName, style.sources[sourceName]));\n    return map;\n};\n\nconst loadLayers = (style) => (map) => {\n    style.layers.map((layer) => map.addLayer(layer));\n    return map;\n};\n\nconst OfflineMap = (options) =>\n    dereferenceStyle(options).then(absoluteSpriteUrl).then((newOptions) =>\n        createEmptyMap(newOptions)\n            .then(loadSources(newOptions.style))\n            .then(loadLayers(newOptions.style))\n    );\n\nexport default OfflineMap\n","import mapboxgl from 'mapbox-gl/src/index'\n\nimport offlineMap from './offline_map'\n\nmapboxgl.OfflineMap = offlineMap\n\nexport default mapboxgl\n","//\n// Our custom intro provides a specialized \"define()\" function, called by the\n// AMD modules below, that sets up the worker blob URL and then executes the\n// main module, storing its exported value as 'mapboxgl'\n\n// The three \"chunks\" imported here are produced by a first Rollup pass,\n// which outputs them as AMD modules.\n\n// Shared dependencies, i.e.:\n/*\ndefine(['exports'], function (exports) {\n    // Code for all common dependencies\n    // Each module's exports are attached attached to 'exports' (with\n    // names rewritten to avoid collisions, etc.)\n})\n*/\nimport './build/mapboxgl/shared';\n\n// Worker and its unique dependencies, i.e.:\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for worker script and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n});\n*/\n// When this wrapper function is passed to our custom define() above,\n// it gets stringified, together with the shared wrapper (using\n// Function.toString()), and the resulting string of code is made into a\n// Blob URL that gets used by the main module to create the web workers.\nimport './build/mapboxgl/worker';\n\n// Main module and its unique dependencies\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for main GL JS module and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n    //\n    //  Returns the actual mapboxgl (i.e. src/index.js)\n});\n*/\nimport './build/mapboxgl/index';\n\nexport default mapboxgl;\n"],"names":["buf","length","this","pos","subarray","writeFixed32","val","writeSFixed32","realloc","writeInt32","writeSFixed64","Math","floor","writeVarint","pbf","high","low","Error","writeSVarint","Boolean","String","c","lead","i","str","charCodeAt","writeUtf8","startPos","len","writeFloat","writeDouble","buffer","writeRawMessage","makeRoomForExtraLength","writeMessage","tag","Bytes","obj","arr","writePackedSVarint","writePackedDouble","writePackedFixed32","writePackedFixed64","writeBytesField","writeTag","Pbf","writeBytes","writeFixed32Field","Fixed32","Fixed64","writeFixed64","writeSFixed64Field","Varint","writeString","writeFloatField","writeBooleanField","border","readFontstacks","readFontstack","glyphs","id","width","left","top","height","metrics","readVarint","readBytes","glyph","readSVarint","advance","GLYPH_PBF_BORDER","parent","target","callbacks","receive","getMercCoords","x","resolution","z","Actor","mapId","data","buffers","targetMapId","err","serialize","error","type","done","cancelable","const","remove","removeEventListener","LngLatBounds","constructor","ne","sw","setSouthWest","setNorthEast","LngLat","lng","lat","convert","Array","isArray","extend","sw2","_sw","ne2","max","_ne","getNorthEast","getNorth","getEast","getSouth","toArray","toString","isEmpty","input","isNaN","latitude","PI","cos","mercatorYfromLat","circumferenceAtLatitude","y","atan","y2","wrap","toBounds","Number","MercatorCoordinate","mercatorXfromLng","toAltitude","CanonicalTileID","url","urls","scheme","min","quadkey","let","mask","replace","pow","bbox","tilesAtZoom","coord","EXTENT","calculateKey","canonical","overscaledZ","dim","equals","OverscaledTileID","targetZ","zDifference","rhs","getTilePoint","minzoom","bounds","validateBounds","TileBounds","contains","tileID","level","getWest","worldSize","ceil","dispatcher","_tileJSONRequest","loadTileJSON","tileJSON","tileBounds","maxzoom","_getMapId","fire","Event","sourceDataType","onAdd","map","onRemove","cancel","_options","hasTile","loadTile","normalizeURL","tile","getImage","_transformRequest","ResourceType","Tile","img","state","painter","context","texture","update","useMipmap","Texture","texParameterf","extTextureFilterAnisotropic","TEXTURE_MAX_ANISOTROPY_EXT","extTextureFilterAnisotropicMax","callback","request","saveTileTexture","Evented","stringify","JSON","keys","Object","sort","getKey","layer","key","refProperties","StyleLayerIndex","layerConfigs","checkMaxAngle","line","anchor","labelLength","windowSize","maxAngle","undefined","segment","p","index","anchorDistance","dist","recentCorners","recentAngleDelta","prev","current","next","angleDelta","angleTo","abs","push","distance","shift","getLineLength","lineLength","k","getAngleWindowSize","shapedText","glyphSize","boxScale","getShapedLabelLength","shapedIcon","right","getCenterAnchor","angleWindowSize","prevDistance","centerDistance","a","b","segmentDistance","t","interpolate","Anchor","_round","getAnchors","spacing","overscaling","tileExtent","shapedLabelLength","isLineContinued","resample","offset","placeAtMiddle","halfLabelLength","markedDistance","anchors","segmentDist","angle","_layerConfigs","_layers","removedIds","layerConfig","createStyleLayer","_featureFilter","featureFilter","filter","familiesBySource","layers","groups","group","result","groupByLayout","values","visibility","sourceId","source","sourceGroup","sourceLayerId","sourceLayer","sourceLayerFamilies","CollisionFeature","collisionBoxArray","featureIndex","sourceLayerIndex","bucketIndex","shaped","padding","alignLine","rotate","y1","bottom","x1","x2","boxStartIndex","_addLineCollisionCircles","tl","Point","tr","bl","br","rotateRadians","_rotate","emplaceBack","boxEndIndex","boxSize","step","nBoxes","overscalingPaddingFactor","log","LN2","nPitchPaddingBoxes","firstBoxOffset","labelStartDistance","paddingStartDistance","segmentLength","boxOffset","boxDistanceToAnchor","segmentBoxDistance","p0","boxAnchorPoint","sub","_unit","_mult","_add","paddedAnchorDistance","TinyQueue","compare","defaultCompare","_down","polygon","area","points","j","f","Cell","compareMax","h","d","inside","minDistSq","Infinity","ring","distToSegmentSquared","sqrt","pointToPolygonDist","SQRT2","item","_up","pop","peek","halfLength","best","module","seed","remainder","bytes","h1","h1b","c1","c2","k1","l","murmur3","murmur2","performSymbolLayout","bucket","glyphMap","glyphPositions","imageMap","imagePositions","showCollisionBoxes","createArrays","tileSize","tilePixelRatio","compareText","iconsNeedLinear","layout","unevaluatedLayoutValues","_unevaluatedLayout","_values","sizes","textSizeData","functionType","zoomRange","compositeTextSizes","possiblyEvaluate","EvaluationParameters","iconSizeData","compositeIconSizes","layoutTextSize","zoom","layoutIconSize","textMaxSize","lineHeight","get","textAlongLine","keepUpright","features","feature","fontstack","evaluate","join","glyphPositionMap","shapedTextOrientations","text","unformattedText","textOffset","spacingIfAllowed","allowsLetterSpacing","textAnchor","textJustify","maxWidth","horizontal","shapeText","WritingMode","allowsVerticalWritingMode","vertical","icon","image","shapeIcon","sdfIcons","sdf","warnOnce","pixelRatio","constantOr","addFeature","generateCollisionDebugBuffers","iconOffset","fontScale","textBoxScale","textMaxBoxScale","iconBoxScale","symbolMinDistance","textPadding","iconPadding","textMaxAngle","iconAlongLine","symbolPlacement","textRepeatDistance","addSymbolAtAnchor","textCollisionFeature","iconCollisionFeature","lineArray","addToLineVertexArray","numIconVertices","numGlyphVertices","numVerticalGlyphVertices","placedTextSymbolIndices","textRotate","addTextVertices","horizontalOnly","textBoxStartIndex","textBoxEndIndex","iconQuads","alongLine","iconWidth","iconHeight","size","textLeft","textRight","textTop","textWidth","textHeight","padT","padR","padB","padL","offsetY","offsetX","sin","matrix","_matMult","tex","paddedRect","writingMode","glyphOffset","getIconQuads","iconRotate","sizeData","SIZE_PACK_FACTOR","MAX_PACKED_SIZE","layerIds","addSymbols","lineStartIndex","iconBoxStartIndex","iconBoxEndIndex","glyphOffsetArray","SymbolBucket","MAX_GLYPHS","symbolInstances","addSymbol","lines","clippedLines","clippedLine","p1","clipLine","geometry","anchorIsTooClose","classifyRings","poi","findPoleOfInaccessibility","point","glyphQuads","shaping","positions","positionedGlyphs","quads","positionedGlyph","fontStack","rect","rectBuffer","halfAdvance","scale","builtInOffset","w","center","verticalRotation","xOffsetCorrection","_rotateAround","getGlyphQuads","placedSymbolArray","repeatDistance","otherAnchors","GlyphAtlas","stacks","bins","stack","stackPositions","src","bitmap","bin","potpack","AlphaImage","copy","register","WorkerTile","params","uid","overscaleFactor","collectResourceTiming","returnDependencies","recalculateLayers","parameters","recalculate","parse","layerIndex","actor","status","CollisionBoxArray","sourceLayerCoder","DictionaryCoder","FeatureIndex","bucketLayerIDs","iconMap","patternMap","buckets","options","layerFamilies","version","encode","family","createBucket","sourceID","populate","mapObject","glyphDependencies","send","maybePrepare","call","icons","iconDependencies","patterns","patternDependencies","glyphAtlas","imageAtlas","ImageAtlas","iconPositions","hasPattern","LineBucket","FillBucket","FillExtrusionBucket","addFeatures","patternPositions","glyphAtlasImage","performanceExists","performance","wrapper","getEntriesByName","name","mark","startMark","endMark","measure","clearMarks","clearMeasures","Performance","_marks","start","end","loadVectorTile","getArrayBuffer","cacheControl","expires","vectorTile","vt","VectorTile","Protobuf","rawData","finish","resourceTimingData","VectorTileWorkerSource","loadVectorData","loading","loaded","perf","workerTile","abort","response","rawTileData","resourceTiming","slice","reloadTile","vtSource","reloadCallback","abortTile","removeTile","RasterDEMTileWorkerSource","encoding","rawImageData","dem","DEMData","polygonArea","coords","ringArea","p2","lowerIndex","middleIndex","upperIndex","coordsLength","rad","wgs84","RADIUS","_","coordinates","geometries","rewind","gj","outer","curryOuter","correctRings","correct","wind","dir","geojsonArea","cw","reverse","toGeoJSON","mvt","VectorTileFeature","prototype","FeatureWrapper","_feature","extent","properties","tags","parseInt","loadGeometry","newRing","GeoJSONWrapper","_geojsonTileLayer","_features","require","rawGeometry","rings","fromVectorTileJs","out","writeLayer","writeTile","writeVarintField","writeStringField","keycache","valuecache","writeFeature","sourceCache","colorModeForRenderPass","drawLayerSymbols","drawCollisionDebug","paint","gl","depthModeForSublayer","StencilMode","disabled","depthMode","stencilMode","colorMode","CullFaceMode","transform","programConfiguration","ONE","transparent","activeTexture","set","viewport","fbo","colorAttachment","bindFramebuffer","createTexture","opt","windowBits","strm","header","GZheader","zlib_inflate","inflate","msg","inflator","utf8str","chunkSize","dictionary","allowBufError","mode","strings","next_in","avail_out","output","Z_NO_FLUSH","Z_NEED_DICT","Uint8Array","dict","Z_BUF_ERROR","Z_OK","Z_STREAM_END","ended","next_out","_mode","to","tail","arraySet","onData","inflateEnd","Z_SYNC_FLUSH","Inflate","chunk","chunks","flattenChunks","exports","b64","placeHoldersLen","lens","tmp","revLookup","curByte","uint8","len2","parts","lookup","extraBytes","code","indexOf","validLen","num","MBTilesSource","eventedParent","super","openDatabase","dbLocation","Database","copyDatabaseFile","dbName","readTile","then","db","executeSql","rows","base64Data","base64_tile_data","fromByteArray","window","workerID","bind","_refreshExpiredTiles","VectorTileSource","style","Promise","XMLHttpRequest","xhr","setRequestHeader","onerror","e","responseURL","statusText","absoluteSpriteUrl","hasProtocol","location","origin","split","match","sprite","path","OfflineMap","newOptions","resolve","emptyMapStyle","sources","emptyMapOptions","Map","addSourceType","RasterTileSourceOffline","all","sourceName","addLayer"],"mappings":"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"}